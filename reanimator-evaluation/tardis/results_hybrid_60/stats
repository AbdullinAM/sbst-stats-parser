Results folder is results_hybrid_60
results hybrid 60
results
TOOLNAME=hybrid
BUDGET=60
Searching folders in directory results_hybrid_60/
=========================================
Folder results_hybrid_60/OKIO-3_1 was found
FolderName=OKIO-3_1
SUT_ID=OKIO-3
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//OKIO-3_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid OKIO-3 . 1 60 --only-compute-metrics results_hybrid_60//OKIO-3_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  OKIO-3

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: okio.AsyncTimeout

---Compilation---
Compiled 'okio/AsyncTimeout_0_Test.java'
Compiled 'okio/AsyncTimeout_1_Test.java'
Compiled 'okio/AsyncTimeout_2_Test.java'
Compiled 'okio/AsyncTimeout_3_Test.java'
Compiled 'okio/AsyncTimeout_5_Test.java'
Compiled 'okio/AsyncTimeout_8_Test.java'
Compiled 'okio/AsyncTimeout_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.5714285714285714
Line coverage = 0.22058823529411764
Branch coverage = 0.11363636363636363
Complexity coverage = 0.2222222222222222

=== Run PIT ===
Executing Mutation Analysis using 51 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.AsyncTimeout, method=enter, methodDesc=()V], indexes=[27], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=AsyncTimeout.java, block=3, lineNumber=76, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.AsyncTimeout, method=source, methodDesc=(Lokio/Source;)Lokio/Source;], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=AsyncTimeout.java, block=33, lineNumber=232, description=mutated return of Object value for okio/AsyncTimeout::source to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.AsyncTimeout, method=enter, methodDesc=()V], indexes=[29], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=AsyncTimeout.java, block=4, lineNumber=76, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.AsyncTimeout, method=sink, methodDesc=(Lokio/Sink;)Lokio/Sink;], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=AsyncTimeout.java, block=32, lineNumber=160, description=mutated return of Object value for okio/AsyncTimeout::sink to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.AsyncTimeout, method=exit, methodDesc=(Z)V], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=AsyncTimeout.java, block=34, lineNumber=276, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.AsyncTimeout, method=exit, methodDesc=()Z], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=AsyncTimeout.java, block=23, lineNumber=120, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.AsyncTimeout, method=exit, methodDesc=(Z)V], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=AsyncTimeout.java, block=35, lineNumber=276, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.AsyncTimeout, method=enter, methodDesc=()V], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=AsyncTimeout.java, block=1, lineNumber=73, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.AsyncTimeout, method=exit, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=AsyncTimeout.java, block=22, lineNumber=120, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 195

>>> RESULTS:
	Tool name: hybrid
	Benchmark: OKIO-3
	Class Under Test: okio.AsyncTimeout
	Run number: 1
	Tool preparation time (ms): 20522
	Tool test cases generation time (ms): 50517
	Test cases execution time (ms): 61
	Test case number: 7
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 68
	Lines covered: 15
	Lines coverage ratio (%): 22.058825
	Conditions total: 44
	Conditions covered: 5
	Conditions coverage ratio (%): 11.363637
	Mutants total: 42
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 42
Copying transcript file transcript.csv to folder results_hybrid_60/OKIO-3_1
Moving working folders and log files
Processing of folder results_hybrid_60/OKIO-3_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-273_1 was found
FolderName=GUAVA-273_1
SUT_ID=GUAVA-273
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-273_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-273 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-273_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-273

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.collect.TreeRangeMap

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 1

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-273
	Class Under Test: com.google.common.collect.TreeRangeMap
	Run number: 1
	Tool preparation time (ms): 29543
	Tool test cases generation time (ms): 61200
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 128
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 54
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-273_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-273_1 has finished
=========================================
Folder results_hybrid_60/WEKA-1093_1 was found
FolderName=WEKA-1093_1
SUT_ID=WEKA-1093
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-1093_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-1093 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-1093_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-1093

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator

---Compilation---
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_0_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_10_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_11_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_1_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_2_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_3_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_4_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_5_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_6_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_7_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_8_Test.java'
Compiled 'weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.8333333333333334
Line coverage = 0.15625
Branch coverage = 0.02
Complexity coverage = 0.2702702702702703

=== Run PIT ===
Executing Mutation Analysis using 131 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MultiNomialBMAEstimator.java, block=56, lineNumber=379, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MultiNomialBMAEstimator.java, block=54, lineNumber=337, description=mutated return of Object value for weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator::listOptions to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator, method=isUseK2Prior, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MultiNomialBMAEstimator.java, block=34, lineNumber=243, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[26], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MultiNomialBMAEstimator.java, block=57, lineNumber=383, description=mutated return of Object value for weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator::getOptions to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator, method=getRevision, methodDesc=()Ljava/lang/String;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MultiNomialBMAEstimator.java, block=58, lineNumber=393, description=mutated return of Object value for weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator::getRevision to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=MultiNomialBMAEstimator.java, block=54, lineNumber=332, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator, method=globalInfo, methodDesc=()Ljava/lang/String;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MultiNomialBMAEstimator.java, block=1, lineNumber=80, description=mutated return of Object value for weka/classifiers/bayes/net/estimate/MultiNomialBMAEstimator::globalInfo to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 250

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-1093
	Class Under Test: weka.classifiers.bayes.net.estimate.MultiNomialBMAEstimator
	Run number: 1
	Tool preparation time (ms): 59783
	Tool test cases generation time (ms): 61084
	Test cases execution time (ms): 135
	Test case number: 12
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 128
	Lines covered: 20
	Lines coverage ratio (%): 15.625
	Conditions total: 50
	Conditions covered: 1
	Conditions coverage ratio (%): 2.0
	Mutants total: 124
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 124
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-1093_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-1093_1 has finished
=========================================
Folder results_hybrid_60/OKIO-24_1 was found
FolderName=OKIO-24_1
SUT_ID=OKIO-24
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//OKIO-24_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid OKIO-24 . 1 60 --only-compute-metrics results_hybrid_60//OKIO-24_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  OKIO-24

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: okio.Timeout

---Compilation---
Compiled 'okio/Timeout_0_Test.java'
Compiled 'okio/Timeout_10_Test.java'
Compiled 'okio/Timeout_14_Test.java'
Compiled 'okio/Timeout_15_Test.java'
Compiled 'okio/Timeout_17_Test.java'
Compiled 'okio/Timeout_1_Test.java'
Compiled 'okio/Timeout_21_Test.java'
Compiled 'okio/Timeout_2_Test.java'
Compiled 'okio/Timeout_3_Test.java'
Compiled 'okio/Timeout_4_Test.java'
Compiled 'okio/Timeout_5_Test.java'
Compiled 'okio/Timeout_6_Test.java'
Compiled 'okio/Timeout_7_Test.java'
Compiled 'okio/Timeout_8_Test.java'
Compiled 'okio/Timeout_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 1.0
Line coverage = 0.7058823529411765
Branch coverage = 0.7
Complexity coverage = 0.6666666666666666

=== Run PIT ===
Executing Mutation Analysis using 40 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=deadlineNanoTime, methodDesc=()J], indexes=[16], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Timeout.java, block=10, lineNumber=105, description=replaced return of long value with value + 1 for okio/Timeout::deadlineNanoTime, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=clearDeadline, methodDesc=()Lokio/Timeout;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Timeout.java, block=18, lineNumber=135, description=mutated return of Object value for okio/Timeout::clearDeadline to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=throwIfReached, methodDesc=()V], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=21, lineNumber=149, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[83], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=33, lineNumber=214, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=deadline, methodDesc=(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=14, lineNumber=122, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=throwIfReached, methodDesc=()V], indexes=[25], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Timeout.java, block=22, lineNumber=149, description=Replaced long subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[34], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=28, lineNumber=203, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=deadline, methodDesc=(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;], indexes=[37], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Timeout.java, block=16, lineNumber=123, description=Replaced long addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=throwIfReached, methodDesc=()V], indexes=[28], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Timeout.java, block=22, lineNumber=149, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=deadline, methodDesc=(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;], indexes=[39], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Timeout.java, block=16, lineNumber=123, description=mutated return of Object value for okio/Timeout::deadline to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=deadline, methodDesc=(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=12, lineNumber=121, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=throwIfReached, methodDesc=()V], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=19, lineNumber=144, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=25, lineNumber=195, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[83], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Timeout.java, block=33, lineNumber=214, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=26, lineNumber=195, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=timeout, methodDesc=(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=1, lineNumber=81, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=timeout, methodDesc=(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;], indexes=[40], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Timeout.java, block=5, lineNumber=84, description=mutated return of Object value for okio/Timeout::timeout to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[58], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=31, lineNumber=206, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=hasDeadline, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Timeout.java, block=7, lineNumber=94, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=clearTimeout, methodDesc=()Lokio/Timeout;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Timeout.java, block=17, lineNumber=129, description=mutated return of Object value for okio/Timeout::clearTimeout to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=timeoutNanos, methodDesc=()J], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Timeout.java, block=6, lineNumber=89, description=replaced return of long value with value + 1 for okio/Timeout::timeoutNanos, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=timeout, methodDesc=(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Timeout.java, block=1, lineNumber=81, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[64], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Timeout.java, block=32, lineNumber=207, description=Replaced long subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=29, lineNumber=203, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=timeout, methodDesc=(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=3, lineNumber=82, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=deadlineNanoTime, methodDesc=()J], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=8, lineNumber=104, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=deadline, methodDesc=(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Timeout.java, block=12, lineNumber=121, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[113], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Timeout.java, block=34, lineNumber=221, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=throwIfReached, methodDesc=()V], indexes=[28], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=22, lineNumber=149, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=waitUntilNotified, methodDesc=(Ljava/lang/Object;)V], indexes=[113], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Timeout.java, block=34, lineNumber=221, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Timeout, method=deadlineNanoTime, methodDesc=(J)Lokio/Timeout;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Timeout.java, block=11, lineNumber=116, description=mutated return of Object value for okio/Timeout::deadlineNanoTime to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 383

>>> RESULTS:
	Tool name: hybrid
	Benchmark: OKIO-24
	Class Under Test: okio.Timeout
	Run number: 1
	Tool preparation time (ms): 20291
	Tool test cases generation time (ms): 61723
	Test cases execution time (ms): 78
	Test case number: 15
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 51
	Lines covered: 36
	Lines coverage ratio (%): 70.588234
	Conditions total: 30
	Conditions covered: 21
	Conditions coverage ratio (%): 70.0
	Mutants total: 40
	Mutants covered: 31
	Mutants coverage ratio (%): 77.5
	Mutants killed: 31
	Mutants killed ratio (%): 77.5
	Mutants alive: 9
Copying transcript file transcript.csv to folder results_hybrid_60/OKIO-24_1
Moving working folders and log files
Processing of folder results_hybrid_60/OKIO-24_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-128_1 was found
FolderName=GUAVA-128_1
SUT_ID=GUAVA-128
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-128_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-128 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-128_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-128

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.net.MediaType

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-128
	Class Under Test: com.google.common.net.MediaType
	Run number: 1
	Tool preparation time (ms): 29608
	Tool test cases generation time (ms): 61091
	Test cases execution time (ms): 7
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 284
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 74
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-128_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-128_1 has finished
=========================================
Folder results_hybrid_60/OKIO-17_1 was found
FolderName=OKIO-17_1
SUT_ID=OKIO-17
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//OKIO-17_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid OKIO-17 . 1 60 --only-compute-metrics results_hybrid_60//OKIO-17_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  OKIO-17

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: okio.Okio

---Compilation---
Compiled 'okio/Okio_10_Test.java'
Compiled 'okio/Okio_13_Test.java'
Compiled 'okio/Okio_2_Test.java'
Compiled 'okio/Okio_3_Test.java'
Compiled 'okio/Okio_5_Test.java'
Compiled 'okio/Okio_6_Test.java'
Compiled 'okio/Okio_7_Test.java'
Compiled 'okio/Okio_8_Test.java'
Compiled 'okio/Okio_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.4117647058823529
Line coverage = 0.2571428571428571
Branch coverage = 0.15625
Complexity coverage = 0.24242424242424243

=== Run PIT ===
Executing Mutation Analysis using 32 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Okio, method=source, methodDesc=(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Okio.java, block=17, lineNumber=130, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Okio, method=source, methodDesc=(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;], indexes=[28], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Okio.java, block=19, lineNumber=132, description=mutated return of Object value for okio/Okio::source to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Okio, method=buffer, methodDesc=(Lokio/Source;)Lokio/BufferedSource;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Okio.java, block=1, lineNumber=51, description=mutated return of Object value for okio/Okio::buffer to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Okio, method=source, methodDesc=(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Okio.java, block=15, lineNumber=129, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Okio, method=source, methodDesc=(Ljava/io/InputStream;)Lokio/Source;], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Okio.java, block=14, lineNumber=125, description=mutated return of Object value for okio/Okio::source to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Okio, method=source, methodDesc=(Ljava/io/File;)Lokio/Source;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Okio.java, block=20, lineNumber=167, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Okio, method=sink, methodDesc=(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Okio.java, block=4, lineNumber=69, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Okio, method=blackhole, methodDesc=()Lokio/Sink;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Okio.java, block=35, lineNumber=199, description=mutated return of Object value for okio/Okio::blackhole to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 181

>>> RESULTS:
	Tool name: hybrid
	Benchmark: OKIO-17
	Class Under Test: okio.Okio
	Run number: 1
	Tool preparation time (ms): 19602
	Tool test cases generation time (ms): 61793
	Test cases execution time (ms): 74
	Test case number: 9
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 35
	Lines covered: 9
	Lines coverage ratio (%): 25.714287
	Conditions total: 32
	Conditions covered: 5
	Conditions coverage ratio (%): 15.625
	Mutants total: 24
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 24
Copying transcript file transcript.csv to folder results_hybrid_60/OKIO-17_1
Moving working folders and log files
Processing of folder results_hybrid_60/OKIO-17_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-82_1 was found
FolderName=GUAVA-82_1
SUT_ID=GUAVA-82
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-82_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-82 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-82_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-82

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.primitives.Shorts

---Compilation---
Compiled 'com/google/common/primitives/Shorts_0_Test.java'
Compiled 'com/google/common/primitives/Shorts_10_Test.java'
Compiled 'com/google/common/primitives/Shorts_11_Test.java'
Compiled 'com/google/common/primitives/Shorts_12_Test.java'
Compiled 'com/google/common/primitives/Shorts_13_Test.java'
Compiled 'com/google/common/primitives/Shorts_14_Test.java'
Compiled 'com/google/common/primitives/Shorts_15_Test.java'
Compiled 'com/google/common/primitives/Shorts_16_Test.java'
Compiled 'com/google/common/primitives/Shorts_17_Test.java'
Compiled 'com/google/common/primitives/Shorts_18_Test.java'
Compiled 'com/google/common/primitives/Shorts_1_Test.java'
Compiled 'com/google/common/primitives/Shorts_22_Test.java'
Compiled 'com/google/common/primitives/Shorts_28_Test.java'
Compiled 'com/google/common/primitives/Shorts_2_Test.java'
Compiled 'com/google/common/primitives/Shorts_3_Test.java'
Compiled 'com/google/common/primitives/Shorts_4_Test.java'
Compiled 'com/google/common/primitives/Shorts_5_Test.java'
Compiled 'com/google/common/primitives/Shorts_6_Test.java'
Compiled 'com/google/common/primitives/Shorts_7_Test.java'
Compiled 'com/google/common/primitives/Shorts_8_Test.java'
Compiled 'com/google/common/primitives/Shorts_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.7037037037037037
Line coverage = 0.5436893203883495
Branch coverage = 0.4264705882352941
Complexity coverage = 0.4262295081967213

=== Run PIT ===
Executing Mutation Analysis using 133 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=lastIndexOf, methodDesc=([SSII)I], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=33, lineNumber=205, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=saturatedCast, methodDesc=(J)S], indexes=[28], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=9, lineNumber=105, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([SSII)I], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=17, lineNumber=154, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=lastIndexOf, methodDesc=([SSII)I], indexes=[32], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=37, lineNumber=210, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[71], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=29, lineNumber=186, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[47], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=25, lineNumber=181, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=min, methodDesc=([S)S], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=38, lineNumber=224, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=toByteArray, methodDesc=(S)[B], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=62, lineNumber=307, description=Replaced Shift Right with Shift Left, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=max, methodDesc=([S)S], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=44, lineNumber=245, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=lastIndexOf, methodDesc=([SSII)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=33, lineNumber=205, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=contains, methodDesc=([SS)Z], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=11, lineNumber=132, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[57], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=59, lineNumber=289, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=fromBytes, methodDesc=(BB)S], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=66, lineNumber=334, description=Replaced bitwise AND with OR, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=join, methodDesc=(Ljava/lang/String;[S)Ljava/lang/String;], indexes=[43], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=77, lineNumber=416, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=ensureCapacity, methodDesc=([SII)[S], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=68, lineNumber=393, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=saturatedCast, methodDesc=(J)S], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=5, lineNumber=99, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=saturatedCast, methodDesc=(J)S], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=7, lineNumber=102, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=fromByteArray, methodDesc=([B)S], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=Shorts.java, block=65, lineNumber=322, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=22, lineNumber=175, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=fromByteArray, methodDesc=([B)S], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=63, lineNumber=322, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=stringConverter, methodDesc=()Lcom/google/common/base/Converter;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=67, lineNumber=376, description=mutated return of Object value for com/google/common/primitives/Shorts::stringConverter to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=contains, methodDesc=([SS)Z], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=14, lineNumber=132, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=max, methodDesc=([S)S], indexes=[52], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=49, lineNumber=252, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=min, methodDesc=([S)S], indexes=[36], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=41, lineNumber=227, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=checkedCast, methodDesc=(J)S], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=2, lineNumber=87, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=57, lineNumber=284, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=join, methodDesc=(Ljava/lang/String;[S)Ljava/lang/String;], indexes=[56], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=78, lineNumber=416, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=ensureCapacity, methodDesc=([SII)[S], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=Shorts.java, block=70, lineNumber=393, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[37], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=24, lineNumber=180, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[32], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=58, lineNumber=284, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=min, methodDesc=([S)S], indexes=[52], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=43, lineNumber=231, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=toByteArray, methodDesc=(S)[B], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=62, lineNumber=307, description=mutated return of Object value for com/google/common/primitives/Shorts::toByteArray to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=contains, methodDesc=([SS)Z], indexes=[37], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=15, lineNumber=137, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=min, methodDesc=([S)S], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=Shorts.java, block=40, lineNumber=224, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=checkedCast, methodDesc=(J)S], indexes=[27], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=4, lineNumber=88, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=max, methodDesc=([S)S], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=Shorts.java, block=46, lineNumber=245, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=57, lineNumber=284, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[70], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=Shorts.java, block=60, lineNumber=290, description=removed call to java/lang/System::arraycopy, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[47], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=25, lineNumber=181, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=compare, methodDesc=(SS)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=10, lineNumber=121, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=min, methodDesc=([S)S], indexes=[36], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=41, lineNumber=227, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[37], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=24, lineNumber=180, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=fromByteArray, methodDesc=([B)S], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=63, lineNumber=322, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([SSII)I], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=17, lineNumber=154, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=saturatedCast, methodDesc=(J)S], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=5, lineNumber=99, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=min, methodDesc=([S)S], indexes=[46], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=42, lineNumber=226, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[80], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=60, lineNumber=289, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=min, methodDesc=([S)S], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=38, lineNumber=224, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=lexicographicalComparator, methodDesc=()Ljava/util/Comparator;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=80, lineNumber=436, description=mutated return of Object value for com/google/common/primitives/Shorts::lexicographicalComparator to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=lastIndexOf, methodDesc=([SSII)I], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=33, lineNumber=205, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[53], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=26, lineNumber=182, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[58], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=26, lineNumber=182, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[57], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=59, lineNumber=289, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=saturatedCast, methodDesc=(J)S], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=7, lineNumber=102, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[75], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=30, lineNumber=180, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=compare, methodDesc=(SS)I], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=10, lineNumber=121, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=lastIndexOf, methodDesc=([SSII)I], indexes=[26], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=36, lineNumber=205, description=Changed increment from -1 to 1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=contains, methodDesc=([SS)Z], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=11, lineNumber=132, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=max, methodDesc=([S)S], indexes=[46], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=48, lineNumber=247, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([SS)I], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=16, lineNumber=149, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=fromBytes, methodDesc=(BB)S], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=66, lineNumber=334, description=Replaced bitwise OR with AND, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[65], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=28, lineNumber=181, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=23, lineNumber=176, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=fromByteArray, methodDesc=([B)S], indexes=[28], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=65, lineNumber=323, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[28], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=58, lineNumber=285, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=join, methodDesc=(Ljava/lang/String;[S)Ljava/lang/String;], indexes=[43], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=77, lineNumber=416, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=ensureCapacity, methodDesc=([SII)[S], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=68, lineNumber=393, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=checkedCast, methodDesc=(J)S], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=Shorts.java, block=4, lineNumber=87, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[34], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=24, lineNumber=180, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=fromBytes, methodDesc=(BB)S], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=66, lineNumber=334, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([S[S)I], indexes=[36], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=24, lineNumber=180, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=join, methodDesc=(Ljava/lang/String;[S)Ljava/lang/String;], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=77, lineNumber=414, description=Replaced integer multiplication with division, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[76], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=60, lineNumber=291, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=fromBytes, methodDesc=(BB)S], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Shorts.java, block=66, lineNumber=334, description=Replaced Shift Left with Shift Right, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([SSII)I], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Shorts.java, block=20, lineNumber=154, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=max, methodDesc=([S)S], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=44, lineNumber=245, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=min, methodDesc=([S)S], indexes=[29], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=40, lineNumber=226, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=join, methodDesc=(Ljava/lang/String;[S)Ljava/lang/String;], indexes=[63], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=79, lineNumber=419, description=mutated return of Object value for com/google/common/primitives/Shorts::join to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=concat, methodDesc=([[S)[S], indexes=[86], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=61, lineNumber=293, description=mutated return of Object value for com/google/common/primitives/Shorts::concat to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([SSII)I], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=19, lineNumber=156, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=indexOf, methodDesc=([SSII)I], indexes=[16], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=18, lineNumber=155, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=max, methodDesc=([S)S], indexes=[29], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=46, lineNumber=247, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=join, methodDesc=(Ljava/lang/String;[S)Ljava/lang/String;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=75, lineNumber=409, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=min, methodDesc=([S)S], indexes=[29], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Shorts.java, block=40, lineNumber=226, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=lastIndexOf, methodDesc=([SS)I], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Shorts.java, block=32, lineNumber=200, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.primitives.Shorts, method=max, methodDesc=([S)S], indexes=[29], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Shorts.java, block=46, lineNumber=247, description=changed conditional boundary, testsInOrder=[]]
Time for mutation analysis = 877

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-82
	Class Under Test: com.google.common.primitives.Shorts
	Run number: 1
	Tool preparation time (ms): 29743
	Tool test cases generation time (ms): 62193
	Test cases execution time (ms): 97
	Test case number: 21
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 103
	Lines covered: 56
	Lines coverage ratio (%): 54.36893
	Conditions total: 68
	Conditions covered: 29
	Conditions coverage ratio (%): 42.647057
	Mutants total: 133
	Mutants covered: 86
	Mutants coverage ratio (%): 64.66165
	Mutants killed: 86
	Mutants killed ratio (%): 64.66165
	Mutants alive: 47
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-82_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-82_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-57_1 was found
FolderName=FASTJSON-57_1
SUT_ID=FASTJSON-57
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-57_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-57 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-57_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-57

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.serializer.ListSerializer

---Compilation---
Compiled 'com/alibaba/fastjson/serializer/ListSerializer_0_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 1.0
Line coverage = 0.09333333333333334
Branch coverage = 0.07142857142857142
Complexity coverage = 0.125

=== Run PIT ===
Executing Mutation Analysis using 43 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.ListSerializer, method=write, methodDesc=(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListSerializer.java, block=1, lineNumber=34, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.ListSerializer, method=write, methodDesc=(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V], indexes=[36], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListSerializer.java, block=4, lineNumber=40, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.ListSerializer, method=write, methodDesc=(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListSerializer.java, block=2, lineNumber=35, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 169

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-57
	Class Under Test: com.alibaba.fastjson.serializer.ListSerializer
	Run number: 1
	Tool preparation time (ms): 38282
	Tool test cases generation time (ms): 61168
	Test cases execution time (ms): 136
	Test case number: 1
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 75
	Lines covered: 7
	Lines coverage ratio (%): 9.333333
	Conditions total: 42
	Conditions covered: 3
	Conditions coverage ratio (%): 7.1428576
	Mutants total: 43
	Mutants covered: 3
	Mutants coverage ratio (%): 6.9767447
	Mutants killed: 3
	Mutants killed ratio (%): 6.9767447
	Mutants alive: 40
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-57_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-57_1 has finished
=========================================
Folder results_hybrid_60/WEKA-128_1 was found
FolderName=WEKA-128_1
SUT_ID=WEKA-128
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-128_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-128 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-128_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-128

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.sql.QueryPanel

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 1

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-128
	Class Under Test: weka.gui.sql.QueryPanel
	Run number: 1
	Tool preparation time (ms): 60396
	Tool test cases generation time (ms): 61589
	Test cases execution time (ms): 6
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 128
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 32
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-128_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-128_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-45_1 was found
FolderName=FASTJSON-45_1
SUT_ID=FASTJSON-45
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-45_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-45 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-45_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-45

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.serializer.AtomicCodec

---Compilation---
Compiled 'com/alibaba/fastjson/serializer/AtomicCodec_0_Test.java'
Compiled 'com/alibaba/fastjson/serializer/AtomicCodec_1_Test.java'
Compiled 'com/alibaba/fastjson/serializer/AtomicCodec_3_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.8
Line coverage = 0.09259259259259259
Branch coverage = 0.03571428571428571
Complexity coverage = 0.21052631578947367

=== Run PIT ===
Executing Mutation Analysis using 41 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.AtomicCodec, method=deserialze, methodDesc=(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=AtomicCodec.java, block=20, lineNumber=95, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.AtomicCodec, method=getFastMatchToken, methodDesc=()I], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=AtomicCodec.java, block=29, lineNumber=121, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
Time for mutation analysis = 142

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-45
	Class Under Test: com.alibaba.fastjson.serializer.AtomicCodec
	Run number: 1
	Tool preparation time (ms): 37761
	Tool test cases generation time (ms): 61873
	Test cases execution time (ms): 163
	Test case number: 3
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 54
	Lines covered: 5
	Lines coverage ratio (%): 9.259259
	Conditions total: 28
	Conditions covered: 1
	Conditions coverage ratio (%): 3.5714288
	Mutants total: 39
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 39
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-45_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-45_1 has finished
=========================================
Folder results_hybrid_60/SPOON-74_1 was found
FolderName=SPOON-74_1
SUT_ID=SPOON-74
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-74_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-74 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-74_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-74

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.pattern.internal.node.ForEachNode

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 4

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-74
	Class Under Test: spoon.pattern.internal.node.ForEachNode
	Run number: 1
	Tool preparation time (ms): 134294
	Tool test cases generation time (ms): 61085
	Test cases execution time (ms): 15
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 51
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 16
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-74_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-74_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-78_1 was found
FolderName=FASTJSON-78_1
SUT_ID=FASTJSON-78
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-78_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-78 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-78_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-78

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.JSON

---Compilation---
Compiled 'com/alibaba/fastjson/JSON_29_Test.java'
Compiled 'com/alibaba/fastjson/JSON_44_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.034482758620689655
Line coverage = 0.08314606741573034
Branch coverage = 0.045
Complexity coverage = 0.015957446808510637

=== Run PIT ===
Executing Mutation Analysis using 166 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSON, method=config, methodDesc=(Ljava/util/Properties;)V], indexes=[89], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSON.java, block=7, lineNumber=129, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSON, method=config, methodDesc=(Ljava/util/Properties;)V], indexes=[72], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSON.java, block=6, lineNumber=122, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSON, method=config, methodDesc=(Ljava/util/Properties;)V], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSON.java, block=3, lineNumber=109, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSON, method=config, methodDesc=(Ljava/util/Properties;)V], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSON.java, block=1, lineNumber=107, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSON, method=parseObject, methodDesc=(Ljava/lang/String;Ljava/lang/reflect/Type;Lcom/alibaba/fastjson/parser/ParserConfig;Lcom/alibaba/fastjson/parser/deserializer/ParseProcess;I[Lcom/alibaba/fastjson/parser/Feature;)Ljava/lang/Object;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSON.java, block=46, lineNumber=357, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSON, method=parseObject, methodDesc=(Ljava/lang/String;Ljava/lang/reflect/Type;Lcom/alibaba/fastjson/parser/ParserConfig;Lcom/alibaba/fastjson/parser/deserializer/ParseProcess;I[Lcom/alibaba/fastjson/parser/Feature;)Ljava/lang/Object;], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=JSON.java, block=50, lineNumber=362, description=changed conditional boundary, testsInOrder=[]]
Time for mutation analysis = 576

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-78
	Class Under Test: com.alibaba.fastjson.JSON
	Run number: 1
	Tool preparation time (ms): 37555
	Tool test cases generation time (ms): 62120
	Test cases execution time (ms): 165
	Test case number: 2
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 445
	Lines covered: 37
	Lines coverage ratio (%): 8.314607
	Conditions total: 200
	Conditions covered: 9
	Conditions coverage ratio (%): 4.5
	Mutants total: 166
	Mutants covered: 6
	Mutants coverage ratio (%): 3.6144576
	Mutants killed: 6
	Mutants killed ratio (%): 3.6144576
	Mutants alive: 160
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-78_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-78_1 has finished
=========================================
Folder results_hybrid_60/WEKA-576_1 was found
FolderName=WEKA-576_1
SUT_ID=WEKA-576
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-576_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-576 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-576_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-576

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.beans.Classifier

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-576
	Class Under Test: weka.gui.beans.Classifier
	Run number: 1
	Tool preparation time (ms): 58166
	Tool test cases generation time (ms): 61077
	Test cases execution time (ms): 5
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 863
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 544
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-576_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-576_1 has finished
=========================================
Folder results_hybrid_60/SEATA-25_1 was found
FolderName=SEATA-25_1
SUT_ID=SEATA-25
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SEATA-25_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SEATA-25 . 1 60 --only-compute-metrics results_hybrid_60//SEATA-25_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SEATA-25

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: io.seata.core.rpc.netty.v1.ProtocolV1Encoder

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SEATA-25
	Class Under Test: io.seata.core.rpc.netty.v1.ProtocolV1Encoder
	Run number: 1
	Tool preparation time (ms): 90003
	Tool test cases generation time (ms): 5074
	Test cases execution time (ms): 16
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 39
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 12
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SEATA-25_1
Moving working folders and log files
Processing of folder results_hybrid_60/SEATA-25_1 has finished
=========================================
Folder results_hybrid_60/WEKA-673_1 was found
FolderName=WEKA-673_1
SUT_ID=WEKA-673
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-673_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-673 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-673_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-673

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.classifiers.functions.MultilayerPerceptron

---Compilation---
Compiled 'weka/classifiers/functions/MultilayerPerceptron_11_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_12_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_13_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_16_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_17_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_20_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_22_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_24_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_26_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_28_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_36_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_45_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_49_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_56_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_58_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_6_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_7_Test.java'
Compiled 'weka/classifiers/functions/MultilayerPerceptron_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.3333333333333333
Line coverage = 0.15582450832072617
Branch coverage = 0.041176470588235294
Complexity coverage = 0.09917355371900827

=== Run PIT ===
Executing Mutation Analysis using 177 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=done, methodDesc=()V], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MultilayerPerceptron.java, block=241, lineNumber=2121, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=setMomentum, methodDesc=(D)V], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=MultilayerPerceptron.java, block=24, lineNumber=1266, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=nominalToBinaryFilterTipText, methodDesc=()Ljava/lang/String;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MultilayerPerceptron.java, block=337, lineNumber=2759, description=mutated return of Object value for weka/classifiers/functions/MultilayerPerceptron::nominalToBinaryFilterTipText to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[250], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MultilayerPerceptron.java, block=309, lineNumber=2563, description=mutated return of Object value for weka/classifiers/functions/MultilayerPerceptron::getOptions to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=getNormalizeAttributes, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MultilayerPerceptron.java, block=10, lineNumber=1177, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=setValidationThreshold, methodDesc=(I)V], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MultilayerPerceptron.java, block=16, lineNumber=1223, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=done, methodDesc=()V], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MultilayerPerceptron.java, block=239, lineNumber=2114, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[168], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MultilayerPerceptron.java, block=303, lineNumber=2542, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=setMomentum, methodDesc=(D)V], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MultilayerPerceptron.java, block=25, lineNumber=1266, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=getMomentum, methodDesc=()D], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MultilayerPerceptron.java, block=28, lineNumber=1279, description=replaced return of double value with -(x + 1) for weka/classifiers/functions/MultilayerPerceptron::getMomentum, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.functions.MultilayerPerceptron, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[204], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MultilayerPerceptron.java, block=306, lineNumber=2551, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 682

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-673
	Class Under Test: weka.classifiers.functions.MultilayerPerceptron
	Run number: 1
	Tool preparation time (ms): 59158
	Tool test cases generation time (ms): 61631
	Test cases execution time (ms): 133
	Test case number: 18
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 661
	Lines covered: 103
	Lines coverage ratio (%): 15.582451
	Conditions total: 340
	Conditions covered: 14
	Conditions coverage ratio (%): 4.117647
	Mutants total: 166
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 166
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-673_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-673_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-120_1 was found
FolderName=FASTJSON-120_1
SUT_ID=FASTJSON-120
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-120_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-120 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-120_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-120

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.asm.ByteVector

---Compilation---
Compiled 'com/alibaba/fastjson/asm/ByteVector_0_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_11_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_13_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_1_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_2_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_3_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_4_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_5_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_6_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_7_Test.java'
Compiled 'com/alibaba/fastjson/asm/ByteVector_8_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.9
Line coverage = 0.8082191780821918
Branch coverage = 0.5833333333333334
Complexity coverage = 0.5

=== Run PIT ===
Executing Mutation Analysis using 73 mutants 
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[75], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=15, lineNumber=188, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByte, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=2, lineNumber=75, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put11, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=4, lineNumber=93, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put11, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=5, lineNumber=98, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[72], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=14, lineNumber=188, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[43], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=11, lineNumber=157, description=Replaced Unsigned Shift Right with Shift Left, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putShort, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=6, lineNumber=112, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put11, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=5, lineNumber=97, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[106], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteVector.java, block=19, lineNumber=195, description=mutated return of Object value for com/alibaba/fastjson/asm/ByteVector::putUTF8 to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[53], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=11, lineNumber=158, description=Replaced Unsigned Shift Right with Shift Left, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=10, lineNumber=152, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putShort, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[52], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteVector.java, block=7, lineNumber=119, description=mutated return of Object value for com/alibaba/fastjson/asm/ByteVector::putShort to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put11, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=4, lineNumber=93, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[61], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=13, lineNumber=186, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=enlarge, methodDesc=(I)V], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=23, lineNumber=226, description=Replaced integer multiplication with division, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByteArray, methodDesc=([BII)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=22, lineNumber=215, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=enlarge, methodDesc=(I)V], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=23, lineNumber=228, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[33], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=11, lineNumber=156, description=Replaced Unsigned Shift Right with Shift Left, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByte, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=2, lineNumber=75, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putShort, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[33], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=7, lineNumber=116, description=Replaced Unsigned Shift Right with Shift Left, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[72], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteVector.java, block=11, lineNumber=161, description=mutated return of Object value for com/alibaba/fastjson/asm/ByteVector::putInt to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put12, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=8, lineNumber=132, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=10, lineNumber=152, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[40], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=11, lineNumber=157, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put12, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[60], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteVector.java, block=9, lineNumber=140, description=mutated return of Object value for com/alibaba/fastjson/asm/ByteVector::put12 to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByteArray, methodDesc=([BII)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=20, lineNumber=209, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[80], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=16, lineNumber=189, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByteArray, methodDesc=([BII)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=21, lineNumber=212, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[50], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=11, lineNumber=158, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[42], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=13, lineNumber=184, description=Replaced Unsigned Shift Right with Shift Left, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putShort, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=7, lineNumber=116, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=12, lineNumber=174, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByteArray, methodDesc=([BII)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=20, lineNumber=209, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=11, lineNumber=156, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put12, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[48], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=9, lineNumber=138, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByte, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteVector.java, block=3, lineNumber=80, description=mutated return of Object value for com/alibaba/fastjson/asm/ByteVector::putByte to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=12, lineNumber=174, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putShort, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=6, lineNumber=112, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[75], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=15, lineNumber=188, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByte, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=2, lineNumber=75, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[72], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=14, lineNumber=188, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put12, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=8, lineNumber=132, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put12, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=9, lineNumber=137, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[49], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=13, lineNumber=185, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[39], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=13, lineNumber=184, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putShort, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=6, lineNumber=112, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=12, lineNumber=174, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putShort, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[40], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=7, lineNumber=117, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=12, lineNumber=174, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=enlarge, methodDesc=(I)V], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=23, lineNumber=227, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=enlarge, methodDesc=(I)V], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=23, lineNumber=228, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put12, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=9, lineNumber=136, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=10, lineNumber=152, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put12, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=8, lineNumber=132, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[61], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=13, lineNumber=186, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putInt, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[60], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=11, lineNumber=159, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByteArray, methodDesc=([BII)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteVector.java, block=20, lineNumber=209, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put11, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteVector.java, block=4, lineNumber=93, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put12, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[41], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteVector.java, block=9, lineNumber=137, description=Replaced Unsigned Shift Right with Shift Left, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByteArray, methodDesc=([BII)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ByteVector.java, block=22, lineNumber=213, description=removed call to java/lang/System::arraycopy, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByte, methodDesc=(I)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[26], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=3, lineNumber=78, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putUTF8, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[95], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ByteVector.java, block=18, lineNumber=186, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=put11, methodDesc=(II)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[50], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteVector.java, block=5, lineNumber=100, description=mutated return of Object value for com/alibaba/fastjson/asm/ByteVector::put11 to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ByteVector, method=putByteArray, methodDesc=([BII)Lcom/alibaba/fastjson/asm/ByteVector;], indexes=[43], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteVector.java, block=22, lineNumber=216, description=mutated return of Object value for com/alibaba/fastjson/asm/ByteVector::putByteArray to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 589

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-120
	Class Under Test: com.alibaba.fastjson.asm.ByteVector
	Run number: 1
	Tool preparation time (ms): 37498
	Tool test cases generation time (ms): 61791
	Test cases execution time (ms): 53
	Test case number: 11
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 73
	Lines covered: 59
	Lines coverage ratio (%): 80.82192
	Conditions total: 24
	Conditions covered: 14
	Conditions coverage ratio (%): 58.333332
	Mutants total: 73
	Mutants covered: 64
	Mutants coverage ratio (%): 87.671234
	Mutants killed: 12
	Mutants killed ratio (%): 16.438356
	Mutants alive: 61
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-120_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-120_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-227_1 was found
FolderName=GUAVA-227_1
SUT_ID=GUAVA-227
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-227_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-227 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-227_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-227

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.graph.EndpointPair

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 1

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-227
	Class Under Test: com.google.common.graph.EndpointPair
	Run number: 1
	Tool preparation time (ms): 29813
	Tool test cases generation time (ms): 2245
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 16
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 8
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-227_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-227_1 has finished
=========================================
Folder results_hybrid_60/OKIO-14_1 was found
FolderName=OKIO-14_1
SUT_ID=OKIO-14
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//OKIO-14_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid OKIO-14 . 1 60 --only-compute-metrics results_hybrid_60//OKIO-14_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  OKIO-14

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: okio.ByteString

---Compilation---
Compiled 'okio/ByteString_14_Test.java'
Compiled 'okio/ByteString_23_Test.java'
Compiled 'okio/ByteString_28_Test.java'
Compiled 'okio/ByteString_30_Test.java'
Compiled 'okio/ByteString_42_Test.java'
Compiled 'okio/ByteString_47_Test.java'
Compiled 'okio/ByteString_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.22807017543859648
Line coverage = 0.140625
Branch coverage = 0.11971830985915492
Complexity coverage = 0.109375

=== Run PIT ===
Executing Mutation Analysis using 114 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=rangeEquals, methodDesc=(I[BII)Z], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteString.java, block=117, lineNumber=395, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=startsWith, methodDesc=([B)Z], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteString.java, block=125, lineNumber=405, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=rangeEquals, methodDesc=(ILokio/ByteString;II)Z], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteString.java, block=116, lineNumber=386, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[12], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteString.java, block=55, lineNumber=233, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=rangeEquals, methodDesc=(I[BII)Z], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteString.java, block=120, lineNumber=395, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteString.java, block=53, lineNumber=233, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=of, methodDesc=([B)Lokio/ByteString;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteString.java, block=1, lineNumber=72, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[36], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteString.java, block=60, lineNumber=235, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=indexOf, methodDesc=([BI)I], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteString.java, block=133, lineNumber=432, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[33], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteString.java, block=59, lineNumber=235, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=rangeEquals, methodDesc=(I[BII)Z], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteString.java, block=123, lineNumber=395, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHex, methodDesc=(Ljava/lang/String;)Lokio/ByteString;], indexes=[48], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteString.java, block=50, lineNumber=224, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=endsWith, methodDesc=(Lokio/ByteString;)Z], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteString.java, block=126, lineNumber=409, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=digest, methodDesc=(Ljava/lang/String;)Lokio/ByteString;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteString.java, block=29, lineNumber=156, description=mutated return of Object value for okio/ByteString::digest to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=indexOf, methodDesc=([BI)I], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteString.java, block=131, lineNumber=430, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[39], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteString.java, block=61, lineNumber=235, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[42], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteString.java, block=61, lineNumber=235, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[26], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteString.java, block=58, lineNumber=234, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=indexOf, methodDesc=([BI)I], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ByteString.java, block=131, lineNumber=430, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteString.java, block=54, lineNumber=233, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=size, methodDesc=()I], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ByteString.java, block=108, lineNumber=347, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=rangeEquals, methodDesc=(I[BII)Z], indexes=[19], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteString.java, block=120, lineNumber=395, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHex, methodDesc=(Ljava/lang/String;)Lokio/ByteString;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteString.java, block=46, lineNumber=220, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=rangeEquals, methodDesc=(I[BII)Z], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteString.java, block=118, lineNumber=395, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=rangeEquals, methodDesc=(I[BII)Z], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteString.java, block=119, lineNumber=395, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteString.java, block=56, lineNumber=234, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHexDigit, methodDesc=(C)I], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ByteString.java, block=57, lineNumber=234, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.ByteString, method=decodeHex, methodDesc=(Ljava/lang/String;)Lokio/ByteString;], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ByteString.java, block=48, lineNumber=221, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 435

>>> RESULTS:
	Tool name: hybrid
	Benchmark: OKIO-14
	Class Under Test: okio.ByteString
	Run number: 1
	Tool preparation time (ms): 19567
	Tool test cases generation time (ms): 61791
	Test cases execution time (ms): 66
	Test case number: 7
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 192
	Lines covered: 27
	Lines coverage ratio (%): 14.0625
	Conditions total: 142
	Conditions covered: 17
	Conditions coverage ratio (%): 11.971831
	Mutants total: 86
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 86
Copying transcript file transcript.csv to folder results_hybrid_60/OKIO-14_1
Moving working folders and log files
Processing of folder results_hybrid_60/OKIO-14_1 has finished
=========================================
Folder results_hybrid_60/WEKA-460_1 was found
FolderName=WEKA-460_1
SUT_ID=WEKA-460
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-460_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-460 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-460_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-460

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.classifiers.pmml.consumer.TreeModel

---Compilation---
Compiled 'weka/classifiers/pmml/consumer/TreeModel_0_Test.java'
Compiled 'weka/classifiers/pmml/consumer/TreeModel_1_Test.java'
Compiled 'weka/classifiers/pmml/consumer/TreeModel_2_Test.java'
Compiled 'weka/classifiers/pmml/consumer/TreeModel_3_Test.java'
Compiled 'weka/classifiers/pmml/consumer/TreeModel_4_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.8333333333333334
Line coverage = 0.34328358208955223
Branch coverage = 0.2777777777777778
Complexity coverage = 0.20833333333333334

=== Run PIT ===
Executing Mutation Analysis using 35 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[67], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=2, lineNumber=1622, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[70], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=TreeModel.java, block=3, lineNumber=1622, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[122], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=9, lineNumber=1633, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[154], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=12, lineNumber=1645, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[119], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=8, lineNumber=1633, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[151], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=11, lineNumber=1645, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[250], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=TreeModel.java, block=21, lineNumber=1656, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[51], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=1, lineNumber=1616, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[208], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=17, lineNumber=1656, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[154], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=TreeModel.java, block=12, lineNumber=1645, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[122], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=TreeModel.java, block=9, lineNumber=1633, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=getRevision, methodDesc=()Ljava/lang/String;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=TreeModel.java, block=30, lineNumber=1734, description=mutated return of Object value for weka/classifiers/pmml/consumer/TreeModel::getRevision to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=distributionForInstance, methodDesc=(Lweka/core/Instance;)[D], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=23, lineNumber=1679, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=graphType, methodDesc=()I], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=TreeModel.java, block=31, lineNumber=1739, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=0, lineNumber=1611, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[70], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TreeModel.java, block=3, lineNumber=1622, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.pmml.consumer.TreeModel, method=<init>, methodDesc=(Lorg/w3c/dom/Element;Lweka/core/Instances;Lweka/core/pmml/MiningSchema;)V], indexes=[208], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=TreeModel.java, block=17, lineNumber=1656, description=changed conditional boundary, testsInOrder=[]]
Time for mutation analysis = 164

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-460
	Class Under Test: weka.classifiers.pmml.consumer.TreeModel
	Run number: 1
	Tool preparation time (ms): 60186
	Tool test cases generation time (ms): 61439
	Test cases execution time (ms): 117
	Test case number: 5
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 67
	Lines covered: 23
	Lines coverage ratio (%): 34.328358
	Conditions total: 36
	Conditions covered: 10
	Conditions coverage ratio (%): 27.777779
	Mutants total: 18
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 18
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-460_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-460_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-11_1 was found
FolderName=GUAVA-11_1
SUT_ID=GUAVA-11
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-11_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-11 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-11_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-11

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.collect.MapMaker

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 1

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-11
	Class Under Test: com.google.common.collect.MapMaker
	Run number: 1
	Tool preparation time (ms): 30214
	Tool test cases generation time (ms): 3106
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 47
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 34
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-11_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-11_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-156_1 was found
FolderName=GUAVA-156_1
SUT_ID=GUAVA-156
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-156_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-156 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-156_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-156

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.math.Quantiles

---Compilation---
Compiled 'com/google/common/math/Quantiles_0_Test.java'
Compiled 'com/google/common/math/Quantiles_1_Test.java'
Compiled 'com/google/common/math/Quantiles_2_Test.java'
Compiled 'com/google/common/math/Quantiles_4_Test.java'
Compiled 'com/google/common/math/Quantiles_5_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.375
Line coverage = 0.07216494845360824
Branch coverage = 0.029411764705882353
Complexity coverage = 0.12

=== Run PIT ===
Executing Mutation Analysis using 112 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.Quantiles, method=checkIndex, methodDesc=(II)V], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Quantiles.java, block=17, lineNumber=485, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.Quantiles, method=checkIndex, methodDesc=(II)V], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Quantiles.java, block=18, lineNumber=485, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.Quantiles, method=checkIndex, methodDesc=(II)V], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Quantiles.java, block=18, lineNumber=485, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.Quantiles, method=quartiles, methodDesc=()Lcom/google/common/math/Quantiles$Scale;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Quantiles.java, block=2, lineNumber=140, description=mutated return of Object value for com/google/common/math/Quantiles::quartiles to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.Quantiles, method=percentiles, methodDesc=()Lcom/google/common/math/Quantiles$Scale;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Quantiles.java, block=3, lineNumber=145, description=mutated return of Object value for com/google/common/math/Quantiles::percentiles to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.Quantiles, method=median, methodDesc=()Lcom/google/common/math/Quantiles$ScaleAndIndex;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Quantiles.java, block=1, lineNumber=135, description=mutated return of Object value for com/google/common/math/Quantiles::median to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.Quantiles, method=checkIndex, methodDesc=(II)V], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Quantiles.java, block=17, lineNumber=485, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.Quantiles, method=scale, methodDesc=(I)Lcom/google/common/math/Quantiles$Scale;], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Quantiles.java, block=4, lineNumber=155, description=mutated return of Object value for com/google/common/math/Quantiles::scale to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 321

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-156
	Class Under Test: com.google.common.math.Quantiles
	Run number: 1
	Tool preparation time (ms): 30458
	Tool test cases generation time (ms): 28857
	Test cases execution time (ms): 37
	Test case number: 5
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 97
	Lines covered: 7
	Lines coverage ratio (%): 7.2164946
	Conditions total: 68
	Conditions covered: 2
	Conditions coverage ratio (%): 2.9411764
	Mutants total: 112
	Mutants covered: 8
	Mutants coverage ratio (%): 7.1428576
	Mutants killed: 8
	Mutants killed ratio (%): 7.1428576
	Mutants alive: 104
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-156_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-156_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-267_1 was found
FolderName=GUAVA-267_1
SUT_ID=GUAVA-267
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-267_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-267 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-267_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-267

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.io.Files

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-267
	Class Under Test: com.google.common.io.Files
	Run number: 1
	Tool preparation time (ms): 29935
	Tool test cases generation time (ms): 2078
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 127
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 65
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-267_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-267_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-213_1 was found
FolderName=GUAVA-213_1
SUT_ID=GUAVA-213
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-213_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-213 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-213_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-213

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.math.PairedStatsAccumulator

---Compilation---
Compiled 'com/google/common/math/PairedStatsAccumulator_0_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_10_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_13_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_19_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_1_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_24_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_2_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_3_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_4_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_5_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_6_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_8_Test.java'
Compiled 'com/google/common/math/PairedStatsAccumulator_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.8461538461538461
Line coverage = 0.5178571428571429
Branch coverage = 0.5
Complexity coverage = 0.5

=== Run PIT ===
Executing Mutation Analysis using 69 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=pearsonsCorrelationCoefficient, methodDesc=()D], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=23, lineNumber=167, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=sampleCovariance, methodDesc=()D], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=PairedStatsAccumulator.java, block=18, lineNumber=145, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=sampleCovariance, methodDesc=()D], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=PairedStatsAccumulator.java, block=20, lineNumber=145, description=removed call to com/google/common/base/Preconditions::checkState, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=leastSquaresFit, methodDesc=()Lcom/google/common/math/LinearTransformation;], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=34, lineNumber=218, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=1, lineNumber=57, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=pearsonsCorrelationCoefficient, methodDesc=()D], indexes=[52], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=PairedStatsAccumulator.java, block=27, lineNumber=172, description=removed call to com/google/common/base/Preconditions::checkState, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[22], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=3, lineNumber=58, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=leastSquaresFit, methodDesc=()Lcom/google/common/math/LinearTransformation;], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=PairedStatsAccumulator.java, block=32, lineNumber=213, description=removed call to com/google/common/base/Preconditions::checkState, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=pearsonsCorrelationCoefficient, methodDesc=()D], indexes=[44], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=PairedStatsAccumulator.java, block=25, lineNumber=172, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=PairedStatsAccumulator.java, block=1, lineNumber=56, description=removed call to com/google/common/math/StatsAccumulator::add, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=pearsonsCorrelationCoefficient, methodDesc=()D], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=PairedStatsAccumulator.java, block=21, lineNumber=166, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[22], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=PairedStatsAccumulator.java, block=3, lineNumber=58, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=2, lineNumber=57, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=populationCovariance, methodDesc=()D], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=15, lineNumber=127, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=pearsonsCorrelationCoefficient, methodDesc=()D], indexes=[44], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=25, lineNumber=172, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=leastSquaresFit, methodDesc=()Lcom/google/common/math/LinearTransformation;], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=32, lineNumber=214, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=populationCovariance, methodDesc=()D], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=PairedStatsAccumulator.java, block=17, lineNumber=128, description=replaced return of double value with -(x + 1) for com/google/common/math/PairedStatsAccumulator::populationCovariance, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=leastSquaresFit, methodDesc=()Lcom/google/common/math/LinearTransformation;], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=PairedStatsAccumulator.java, block=34, lineNumber=218, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=leastSquaresFit, methodDesc=()Lcom/google/common/math/LinearTransformation;], indexes=[82], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=PairedStatsAccumulator.java, block=38, lineNumber=226, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[54], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=PairedStatsAccumulator.java, block=5, lineNumber=64, description=removed call to com/google/common/math/StatsAccumulator::add, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=leastSquaresFit, methodDesc=()Lcom/google/common/math/LinearTransformation;], indexes=[82], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=38, lineNumber=226, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=pearsonsCorrelationCoefficient, methodDesc=()D], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=PairedStatsAccumulator.java, block=23, lineNumber=166, description=removed call to com/google/common/base/Preconditions::checkState, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=leastSquaresFit, methodDesc=()Lcom/google/common/math/LinearTransformation;], indexes=[90], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=PairedStatsAccumulator.java, block=40, lineNumber=226, description=removed call to com/google/common/base/Preconditions::checkState, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=populationCovariance, methodDesc=()D], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=PairedStatsAccumulator.java, block=17, lineNumber=127, description=removed call to com/google/common/base/Preconditions::checkState, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[39], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=PairedStatsAccumulator.java, block=4, lineNumber=59, description=Replaced double addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=leastSquaresFit, methodDesc=()Lcom/google/common/math/LinearTransformation;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=30, lineNumber=213, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=addAll, methodDesc=(Lcom/google/common/math/PairedStats;)V], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=6, lineNumber=72, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=yStats, methodDesc=()Lcom/google/common/math/Stats;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=PairedStatsAccumulator.java, block=14, lineNumber=109, description=mutated return of Object value for com/google/common/math/PairedStatsAccumulator::yStats to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[37], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=PairedStatsAccumulator.java, block=4, lineNumber=59, description=Replaced double subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=PairedStatsAccumulator.java, block=4, lineNumber=59, description=Replaced double multiplication with division, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=snapshot, methodDesc=()Lcom/google/common/math/PairedStats;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=PairedStatsAccumulator.java, block=11, lineNumber=94, description=mutated return of Object value for com/google/common/math/PairedStatsAccumulator::snapshot to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=add, methodDesc=(DD)V], indexes=[32], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=PairedStatsAccumulator.java, block=4, lineNumber=59, description=Replaced double subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=xStats, methodDesc=()Lcom/google/common/math/Stats;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=PairedStatsAccumulator.java, block=13, lineNumber=104, description=mutated return of Object value for com/google/common/math/PairedStatsAccumulator::xStats to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=pearsonsCorrelationCoefficient, methodDesc=()D], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=21, lineNumber=166, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=count, methodDesc=()J], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=PairedStatsAccumulator.java, block=12, lineNumber=99, description=replaced return of long value with value + 1 for com/google/common/math/PairedStatsAccumulator::count, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=leastSquaresFit, methodDesc=()Lcom/google/common/math/LinearTransformation;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=PairedStatsAccumulator.java, block=30, lineNumber=213, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=populationCovariance, methodDesc=()D], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=PairedStatsAccumulator.java, block=17, lineNumber=128, description=Replaced double division with multiplication, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.math.PairedStatsAccumulator, method=sampleCovariance, methodDesc=()D], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=PairedStatsAccumulator.java, block=18, lineNumber=145, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 420

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-213
	Class Under Test: com.google.common.math.PairedStatsAccumulator
	Run number: 1
	Tool preparation time (ms): 30331
	Tool test cases generation time (ms): 61267
	Test cases execution time (ms): 85
	Test case number: 13
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 56
	Lines covered: 29
	Lines coverage ratio (%): 51.785713
	Conditions total: 34
	Conditions covered: 17
	Conditions coverage ratio (%): 50.0
	Mutants total: 69
	Mutants covered: 38
	Mutants coverage ratio (%): 55.072464
	Mutants killed: 38
	Mutants killed ratio (%): 55.072464
	Mutants alive: 31
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-213_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-213_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-237_1 was found
FolderName=GUAVA-237_1
SUT_ID=GUAVA-237
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-237_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-237 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-237_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-237

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.hash.Hashing

---Compilation---
Compiled 'com/google/common/hash/Hashing_0_Test.java'
Compiled 'com/google/common/hash/Hashing_10_Test.java'
Compiled 'com/google/common/hash/Hashing_1_Test.java'
Compiled 'com/google/common/hash/Hashing_27_Test.java'
Compiled 'com/google/common/hash/Hashing_3_Test.java'
Compiled 'com/google/common/hash/Hashing_5_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.18181818181818182
Line coverage = 0.07317073170731707
Branch coverage = 0.03333333333333333
Complexity coverage = 0.125

=== Run PIT ===
Executing Mutation Analysis using 80 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.hash.Hashing, method=murmur3_128, methodDesc=()Lcom/google/common/hash/HashFunction;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Hashing.java, block=10, lineNumber=134, description=mutated return of Object value for com/google/common/hash/Hashing::murmur3_128 to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.hash.Hashing, method=sha512, methodDesc=()Lcom/google/common/hash/HashFunction;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Hashing.java, block=17, lineNumber=225, description=mutated return of Object value for com/google/common/hash/Hashing::sha512 to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.hash.Hashing, method=sipHash24, methodDesc=(JJ)Lcom/google/common/hash/HashFunction;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Hashing.java, block=12, lineNumber=154, description=mutated return of Object value for com/google/common/hash/Hashing::sipHash24 to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.hash.Hashing, method=murmur3_32, methodDesc=()Lcom/google/common/hash/HashFunction;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Hashing.java, block=8, lineNumber=112, description=mutated return of Object value for com/google/common/hash/Hashing::murmur3_32 to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.hash.Hashing, method=checkPositiveAndMakeMultipleOf32, methodDesc=(I)I], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=Hashing.java, block=54, lineNumber=567, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.hash.Hashing, method=checkPositiveAndMakeMultipleOf32, methodDesc=(I)I], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Hashing.java, block=52, lineNumber=567, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.hash.Hashing, method=checkPositiveAndMakeMultipleOf32, methodDesc=(I)I], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Hashing.java, block=52, lineNumber=567, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 269

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-237
	Class Under Test: com.google.common.hash.Hashing
	Run number: 1
	Tool preparation time (ms): 30529
	Tool test cases generation time (ms): 61506
	Test cases execution time (ms): 53
	Test case number: 6
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 82
	Lines covered: 6
	Lines coverage ratio (%): 7.317073
	Conditions total: 30
	Conditions covered: 1
	Conditions coverage ratio (%): 3.3333335
	Mutants total: 80
	Mutants covered: 7
	Mutants coverage ratio (%): 8.75
	Mutants killed: 7
	Mutants killed ratio (%): 8.75
	Mutants alive: 73
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-237_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-237_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-226_1 was found
FolderName=GUAVA-226_1
SUT_ID=GUAVA-226
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-226_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-226 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-226_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-226

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.io.ByteSource

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-226
	Class Under Test: com.google.common.io.ByteSource
	Run number: 1
	Tool preparation time (ms): 30872
	Tool test cases generation time (ms): 2089
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 88
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 20
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-226_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-226_1 has finished
=========================================
Folder results_hybrid_60/WEKA-151_1 was found
FolderName=WEKA-151_1
SUT_ID=WEKA-151
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-151_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-151 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-151_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-151

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.core.neighboursearch.NearestNeighbourSearch

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 1

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-151
	Class Under Test: weka.core.neighboursearch.NearestNeighbourSearch
	Run number: 1
	Tool preparation time (ms): 58498
	Tool test cases generation time (ms): 2248
	Test cases execution time (ms): 5
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 104
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 45
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-151_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-151_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-99_1 was found
FolderName=FASTJSON-99_1
SUT_ID=FASTJSON-99
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-99_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-99 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-99_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-99

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.util.RyuFloat

---Compilation---
Compiled 'com/alibaba/fastjson/util/RyuFloat_0_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.5
Line coverage = 0.014563106796116505
Branch coverage = 0.0
Complexity coverage = 0.0273972602739726

=== Run PIT ===
Executing Mutation Analysis using 177 mutants 
Time for mutation analysis = 304

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-99
	Class Under Test: com.alibaba.fastjson.util.RyuFloat
	Run number: 1
	Tool preparation time (ms): 39076
	Tool test cases generation time (ms): 12356
	Test cases execution time (ms): 17
	Test case number: 1
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 206
	Lines covered: 3
	Lines coverage ratio (%): 1.4563107
	Conditions total: 138
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 177
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 177
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-99_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-99_1 has finished
=========================================
Folder results_hybrid_60/SEATA-28_1 was found
FolderName=SEATA-28_1
SUT_ID=SEATA-28
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SEATA-28_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SEATA-28 . 1 60 --only-compute-metrics results_hybrid_60//SEATA-28_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SEATA-28

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: io.seata.core.serializer.SerializerType

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SEATA-28
	Class Under Test: io.seata.core.serializer.SerializerType
	Run number: 1
	Tool preparation time (ms): 89200
	Tool test cases generation time (ms): 5069
	Test cases execution time (ms): 19
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 17
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 8
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SEATA-28_1
Moving working folders and log files
Processing of folder results_hybrid_60/SEATA-28_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-232_1 was found
FolderName=GUAVA-232_1
SUT_ID=GUAVA-232
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-232_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-232 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-232_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-232

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.io.ByteStreams

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-232
	Class Under Test: com.google.common.io.ByteStreams
	Run number: 1
	Tool preparation time (ms): 30907
	Tool test cases generation time (ms): 3089
	Test cases execution time (ms): 7
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 140
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 60
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-232_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-232_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-72_1 was found
FolderName=FASTJSON-72_1
SUT_ID=FASTJSON-72
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-72_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-72 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-72_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-72

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.asm.ClassWriter

---Compilation---
Compiled 'com/alibaba/fastjson/asm/ClassWriter_0_Test.java'
Compiled 'com/alibaba/fastjson/asm/ClassWriter_1_Test.java'
Compiled 'com/alibaba/fastjson/asm/ClassWriter_2_Test.java'
Compiled 'com/alibaba/fastjson/asm/ClassWriter_3_Test.java'
Compiled 'com/alibaba/fastjson/asm/ClassWriter_5_Test.java'
Compiled 'com/alibaba/fastjson/asm/ClassWriter_6_Test.java'
Compiled 'com/alibaba/fastjson/asm/ClassWriter_7_Test.java'
Compiled 'com/alibaba/fastjson/asm/ClassWriter_8_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.9230769230769231
Line coverage = 0.6737588652482269
Branch coverage = 0.46296296296296297
Complexity coverage = 0.375

=== Run PIT ===
Executing Mutation Analysis using 86 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=get, methodDesc=(Lcom/alibaba/fastjson/asm/Item;)Lcom/alibaba/fastjson/asm/Item;], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ClassWriter.java, block=48, lineNumber=366, description=mutated return of Object value for com/alibaba/fastjson/asm/ClassWriter::get to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[126], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=13, lineNumber=213, description=Replaced XOR with AND, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newNameTypeItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[51], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=43, lineNumber=354, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=put, methodDesc=(Lcom/alibaba/fastjson/asm/Item;)V], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ClassWriter.java, block=49, lineNumber=370, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newNameTypeItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[61], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=43, lineNumber=355, description=removed call to com/alibaba/fastjson/asm/ClassWriter::put, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newNameTypeItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[66], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ClassWriter.java, block=43, lineNumber=357, description=mutated return of Object value for com/alibaba/fastjson/asm/ClassWriter::newNameTypeItem to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[182], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=15, lineNumber=220, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newFieldItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=34, lineNumber=302, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=visit, methodDesc=(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V], indexes=[69], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=6, lineNumber=173, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newConstItem, methodDesc=(Ljava/lang/Object;)Lcom/alibaba/fastjson/asm/Item;], indexes=[68], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=23, lineNumber=258, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=visit, methodDesc=(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V], indexes=[46], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ClassWriter.java, block=5, lineNumber=170, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newConstItem, methodDesc=(Ljava/lang/Object;)Lcom/alibaba/fastjson/asm/Item;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=20, lineNumber=247, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=9, lineNumber=190, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newUTF8, methodDesc=(Ljava/lang/String;)I], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=30, lineNumber=269, description=removed call to com/alibaba/fastjson/asm/Item::set, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[164], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ClassWriter.java, block=14, lineNumber=215, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[54], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=11, lineNumber=200, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=visit, methodDesc=(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V], indexes=[84], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=ClassWriter.java, block=7, lineNumber=173, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[210], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=17, lineNumber=226, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newConstItem, methodDesc=(Ljava/lang/Object;)Lcom/alibaba/fastjson/asm/Item;], indexes=[81], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=25, lineNumber=260, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newMethodItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/alibaba/fastjson/asm/Item;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=36, lineNumber=323, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newMethodItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/alibaba/fastjson/asm/Item;], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=38, lineNumber=324, description=removed call to com/alibaba/fastjson/asm/Item::set, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newMethodItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/alibaba/fastjson/asm/Item;], indexes=[81], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ClassWriter.java, block=39, lineNumber=333, description=mutated return of Object value for com/alibaba/fastjson/asm/ClassWriter::newMethodItem to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newFieldItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=34, lineNumber=300, description=removed call to com/alibaba/fastjson/asm/Item::set, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newNameTypeItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=42, lineNumber=348, description=removed call to com/alibaba/fastjson/asm/Item::set, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=visit, methodDesc=(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V], indexes=[43], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=4, lineNumber=170, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newFieldItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[64], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=35, lineNumber=307, description=removed call to com/alibaba/fastjson/asm/ClassWriter::put, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=get, methodDesc=(Lcom/alibaba/fastjson/asm/Item;)Lcom/alibaba/fastjson/asm/Item;], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=44, lineNumber=363, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=9, lineNumber=193, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newClassItem, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[40], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=33, lineNumber=284, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=visit, methodDesc=(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V], indexes=[69], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ClassWriter.java, block=6, lineNumber=173, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newFieldItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[69], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ClassWriter.java, block=35, lineNumber=309, description=mutated return of Object value for com/alibaba/fastjson/asm/ClassWriter::newFieldItem to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newMethodItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/alibaba/fastjson/asm/Item;], indexes=[76], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=39, lineNumber=331, description=removed call to com/alibaba/fastjson/asm/ClassWriter::put, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newNameTypeItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=42, lineNumber=350, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newUTF8, methodDesc=(Ljava/lang/String;)I], indexes=[55], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ClassWriter.java, block=31, lineNumber=276, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newMethodItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/alibaba/fastjson/asm/Item;], indexes=[32], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=38, lineNumber=326, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=get, methodDesc=(Lcom/alibaba/fastjson/asm/Item;)Lcom/alibaba/fastjson/asm/Item;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=44, lineNumber=362, description=Replaced integer modulus with multiplication, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=put, methodDesc=(Lcom/alibaba/fastjson/asm/Item;)V], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=49, lineNumber=370, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newUTF8, methodDesc=(Ljava/lang/String;)I], indexes=[49], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=31, lineNumber=274, description=removed call to com/alibaba/fastjson/asm/ClassWriter::put, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[127], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=13, lineNumber=213, description=Replaced bitwise AND with OR, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newFieldItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[54], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=35, lineNumber=306, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newUTF8, methodDesc=(Ljava/lang/String;)I], indexes=[39], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=31, lineNumber=273, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=9, lineNumber=190, description=Replaced integer multiplication with division, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newClassItem, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=32, lineNumber=280, description=removed call to com/alibaba/fastjson/asm/Item::set, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newClassItem, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=32, lineNumber=282, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[82], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=13, lineNumber=206, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newUTF8, methodDesc=(Ljava/lang/String;)I], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=30, lineNumber=271, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=put, methodDesc=(Lcom/alibaba/fastjson/asm/Item;)V], indexes=[110], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=54, lineNumber=387, description=Replaced integer modulus with multiplication, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=<init>, methodDesc=(I)V], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=1, lineNumber=154, description=Replaced double multiplication with division, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[233], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ClassWriter.java, block=19, lineNumber=231, description=mutated return of Object value for com/alibaba/fastjson/asm/ClassWriter::toByteArray to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=visit, methodDesc=(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V], indexes=[28], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=2, lineNumber=169, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newMethodItem, methodDesc=(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/alibaba/fastjson/asm/Item;], indexes=[66], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=ClassWriter.java, block=39, lineNumber=330, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[152], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=13, lineNumber=215, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newClassItem, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[55], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ClassWriter.java, block=33, lineNumber=287, description=mutated return of Object value for com/alibaba/fastjson/asm/ClassWriter::newClassItem to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=get, methodDesc=(Lcom/alibaba/fastjson/asm/Item;)Lcom/alibaba/fastjson/asm/Item;], indexes=[22], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=45, lineNumber=363, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=visit, methodDesc=(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V], indexes=[46], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=5, lineNumber=170, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=newClassItem, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Item;], indexes=[50], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ClassWriter.java, block=33, lineNumber=285, description=removed call to com/alibaba/fastjson/asm/ClassWriter::put, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=get, methodDesc=(Lcom/alibaba/fastjson/asm/Item;)Lcom/alibaba/fastjson/asm/Item;], indexes=[26], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ClassWriter.java, block=46, lineNumber=363, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.ClassWriter, method=toByteArray, methodDesc=()[B], indexes=[152], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=ClassWriter.java, block=13, lineNumber=215, description=changed conditional boundary, testsInOrder=[]]
Time for mutation analysis = 502

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-72
	Class Under Test: com.alibaba.fastjson.asm.ClassWriter
	Run number: 1
	Tool preparation time (ms): 38174
	Tool test cases generation time (ms): 61526
	Test cases execution time (ms): 49
	Test case number: 8
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 141
	Lines covered: 95
	Lines coverage ratio (%): 67.375885
	Conditions total: 54
	Conditions covered: 25
	Conditions coverage ratio (%): 46.296295
	Mutants total: 86
	Mutants covered: 58
	Mutants coverage ratio (%): 67.441864
	Mutants killed: 58
	Mutants killed ratio (%): 67.441864
	Mutants alive: 28
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-72_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-72_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-94_1 was found
FolderName=FASTJSON-94_1
SUT_ID=FASTJSON-94
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-94_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-94 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-94_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-94

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.parser.JSONToken

---Compilation---
Compiled 'com/alibaba/fastjson/parser/JSONToken_0_Test.java'
Compiled 'com/alibaba/fastjson/parser/JSONToken_1_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 1.0
Line coverage = 0.10344827586206896
Branch coverage = 0.037037037037037035
Complexity coverage = 0.07142857142857142

=== Run PIT ===
Executing Mutation Analysis using 27 mutants 
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.JSONToken, method=name, methodDesc=(I)Ljava/lang/String;], indexes=[139], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=JSONToken.java, block=27, lineNumber=128, description=mutated return of Object value for com/alibaba/fastjson/parser/JSONToken::name to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 133

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-94
	Class Under Test: com.alibaba.fastjson.parser.JSONToken
	Run number: 1
	Tool preparation time (ms): 37054
	Tool test cases generation time (ms): 26364
	Test cases execution time (ms): 24
	Test case number: 2
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 29
	Lines covered: 3
	Lines coverage ratio (%): 10.344828
	Conditions total: 27
	Conditions covered: 1
	Conditions coverage ratio (%): 3.7037036
	Mutants total: 27
	Mutants covered: 1
	Mutants coverage ratio (%): 3.7037036
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 27
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-94_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-94_1 has finished
=========================================
Folder results_hybrid_60/SPOON-139_1 was found
FolderName=SPOON-139_1
SUT_ID=SPOON-139
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-139_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-139 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-139_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-139

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.reflect.visitor.ListPrinter

---Compilation---
Compiled 'spoon/reflect/visitor/ListPrinter_0_Test.java'
Compiled 'spoon/reflect/visitor/ListPrinter_1_Test.java'
Compiled 'spoon/reflect/visitor/ListPrinter_2_Test.java'
Compiled 'spoon/reflect/visitor/ListPrinter_5_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 1.0
Line coverage = 0.7241379310344828
Branch coverage = 0.4166666666666667
Complexity coverage = 0.4

=== Run PIT ===
Executing Mutation Analysis using 12 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.reflect.visitor.ListPrinter, method=<init>, methodDesc=(Lspoon/reflect/visitor/TokenWriter;ZLjava/lang/String;ZZLjava/lang/String;ZZLjava/lang/String;)V], indexes=[43], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListPrinter.java, block=0, lineNumber=46, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.reflect.visitor.ListPrinter, method=close, methodDesc=()V], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListPrinter.java, block=13, lineNumber=87, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.reflect.visitor.ListPrinter, method=close, methodDesc=()V], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListPrinter.java, block=12, lineNumber=84, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.reflect.visitor.ListPrinter, method=close, methodDesc=()V], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListPrinter.java, block=14, lineNumber=87, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.reflect.visitor.ListPrinter, method=printSeparatorIfAppropriate, methodDesc=()V], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListPrinter.java, block=5, lineNumber=61, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.reflect.visitor.ListPrinter, method=<init>, methodDesc=(Lspoon/reflect/visitor/TokenWriter;ZLjava/lang/String;ZZLjava/lang/String;ZZLjava/lang/String;)V], indexes=[68], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListPrinter.java, block=3, lineNumber=52, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.reflect.visitor.ListPrinter, method=<init>, methodDesc=(Lspoon/reflect/visitor/TokenWriter;ZLjava/lang/String;ZZLjava/lang/String;ZZLjava/lang/String;)V], indexes=[56], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListPrinter.java, block=2, lineNumber=49, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.reflect.visitor.ListPrinter, method=<init>, methodDesc=(Lspoon/reflect/visitor/TokenWriter;ZLjava/lang/String;ZZLjava/lang/String;ZZLjava/lang/String;)V], indexes=[53], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=ListPrinter.java, block=1, lineNumber=49, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 109

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-139
	Class Under Test: spoon.reflect.visitor.ListPrinter
	Run number: 1
	Tool preparation time (ms): 131282
	Tool test cases generation time (ms): 61237
	Test cases execution time (ms): 290
	Test case number: 4
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 29
	Lines covered: 21
	Lines coverage ratio (%): 72.41379
	Conditions total: 24
	Conditions covered: 10
	Conditions coverage ratio (%): 41.666664
	Mutants total: 4
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 4
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-139_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-139_1 has finished
=========================================
Folder results_hybrid_60/SPOON-1_1 was found
FolderName=SPOON-1_1
SUT_ID=SPOON-1
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-1_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-1 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-1_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-1

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.pattern.internal.parameter.MapParameterInfo

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-1
	Class Under Test: spoon.pattern.internal.parameter.MapParameterInfo
	Run number: 1
	Tool preparation time (ms): 133052
	Tool test cases generation time (ms): 61082
	Test cases execution time (ms): 15
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 57
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 32
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-1_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-1_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-17_1 was found
FolderName=FASTJSON-17_1
SUT_ID=FASTJSON-17
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-17_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-17 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-17_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-17

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.JSONValidator

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-17
	Class Under Test: com.alibaba.fastjson.JSONValidator
	Run number: 1
	Tool preparation time (ms): 36409
	Tool test cases generation time (ms): 3106
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 164
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 144
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-17_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-17_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-86_1 was found
FolderName=FASTJSON-86_1
SUT_ID=FASTJSON-86
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-86_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-86 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-86_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-86

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.JSONPath

---Compilation---
Compiled 'com/alibaba/fastjson/JSONPath_38_Test.java'
Compiled 'com/alibaba/fastjson/JSONPath_49_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.16981132075471697
Line coverage = 0.06602641056422569
Branch coverage = 0.03870967741935484
Complexity coverage = 0.03856749311294766

=== Run PIT ===
Executing Mutation Analysis using 184 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=eval, methodDesc=(Ljava/lang/Object;)Ljava/lang/Object;], indexes=[46], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=JSONPath.java, block=20, lineNumber=105, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=getPropertyValue, methodDesc=(Ljava/lang/Object;Ljava/lang/String;J)Ljava/lang/Object;], indexes=[88], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSONPath.java, block=409, lineNumber=3536, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=reserveToObject, methodDesc=(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;], indexes=[34], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSONPath.java, block=589, lineNumber=4006, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=compile, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/JSONPath;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSONPath.java, block=189, lineNumber=582, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=eval, methodDesc=(Ljava/lang/Object;)Ljava/lang/Object;], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=JSONPath.java, block=19, lineNumber=102, description=removed call to com/alibaba/fastjson/JSONPath::init, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=getJavaBeanSerializer, methodDesc=(Ljava/lang/Class;)Lcom/alibaba/fastjson/serializer/JavaBeanSerializer;], indexes=[26], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=JSONPath.java, block=547, lineNumber=3894, description=mutated return of Object value for com/alibaba/fastjson/JSONPath::getJavaBeanSerializer to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=init, methodDesc=()V], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSONPath.java, block=5, lineNumber=70, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=getPropertyValue, methodDesc=(Ljava/lang/Object;Ljava/lang/String;J)Ljava/lang/Object;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSONPath.java, block=402, lineNumber=3513, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=compile, methodDesc=(Ljava/lang/String;)Lcom/alibaba/fastjson/JSONPath;], indexes=[36], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=JSONPath.java, block=192, lineNumber=589, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=reserveToObject, methodDesc=(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSONPath.java, block=586, lineNumber=4001, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=reserveToObject, methodDesc=(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;], indexes=[56], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=JSONPath.java, block=590, lineNumber=4009, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONPath, method=reserveToObject, methodDesc=(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;], indexes=[88], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=JSONPath.java, block=593, lineNumber=4006, description=Changed increment from 1 to -1, testsInOrder=[]]
Time for mutation analysis = 813

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-86
	Class Under Test: com.alibaba.fastjson.JSONPath
	Run number: 1
	Tool preparation time (ms): 37912
	Tool test cases generation time (ms): 61385
	Test cases execution time (ms): 186
	Test case number: 2
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 833
	Lines covered: 55
	Lines coverage ratio (%): 6.602641
	Conditions total: 620
	Conditions covered: 24
	Conditions coverage ratio (%): 3.8709679
	Mutants total: 184
	Mutants covered: 12
	Mutants coverage ratio (%): 6.521739
	Mutants killed: 12
	Mutants killed ratio (%): 6.521739
	Mutants alive: 172
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-86_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-86_1 has finished
=========================================
Folder results_hybrid_60/WEKA-119_1 was found
FolderName=WEKA-119_1
SUT_ID=WEKA-119
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-119_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-119 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-119_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-119

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.graphvisualizer.GraphVisualizer

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-119
	Class Under Test: weka.gui.graphvisualizer.GraphVisualizer
	Run number: 1
	Tool preparation time (ms): 57623
	Tool test cases generation time (ms): 61119
	Test cases execution time (ms): 6
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 210
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 30
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-119_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-119_1 has finished
=========================================
Folder results_hybrid_60/OKIO-9_1 was found
FolderName=OKIO-9_1
SUT_ID=OKIO-9
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//OKIO-9_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid OKIO-9 . 1 60 --only-compute-metrics results_hybrid_60//OKIO-9_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  OKIO-9

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: okio.Buffer

---Compilation---
Compiled 'okio/Buffer_0_Test.java'
Compiled 'okio/Buffer_102_Test.java'
Compiled 'okio/Buffer_16_Test.java'
Compiled 'okio/Buffer_26_Test.java'
Compiled 'okio/Buffer_36_Test.java'
Compiled 'okio/Buffer_53_Test.java'
Compiled 'okio/Buffer_54_Test.java'
Compiled 'okio/Buffer_55_Test.java'
Compiled 'okio/Buffer_56_Test.java'
Compiled 'okio/Buffer_5_Test.java'
Compiled 'okio/Buffer_87_Test.java'
Compiled 'okio/Buffer_94_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.15178571428571427
Line coverage = 0.09720670391061452
Branch coverage = 0.058394160583941604
Complexity coverage = 0.054404145077720206

=== Run PIT ===
Executing Mutation Analysis using 334 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeLong, methodDesc=(J)Lokio/Buffer;], indexes=[47], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Buffer.java, block=371, lineNumber=1203, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeLong, methodDesc=(J)Lokio/Buffer;], indexes=[112], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Buffer.java, block=371, lineNumber=1208, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=write, methodDesc=(Lokio/Buffer;J)V], indexes=[48], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Buffer.java, block=437, lineNumber=1369, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=read, methodDesc=(Lokio/Buffer;J)J], indexes=[36], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=454, lineNumber=1406, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeUtf8, methodDesc=(Ljava/lang/String;II)Lokio/Buffer;], indexes=[57], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Buffer.java, block=294, lineNumber=970, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=inputStream, methodDesc=()Ljava/io/InputStream;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Buffer.java, block=17, lineNumber=125, description=mutated return of Object value for okio/Buffer::inputStream to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeUtf8, methodDesc=(Ljava/lang/String;II)Lokio/Buffer;], indexes=[123], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Buffer.java, block=298, lineNumber=983, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeUtf8, methodDesc=(Ljava/lang/String;II)Lokio/Buffer;], indexes=[191], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Buffer.java, block=302, lineNumber=998, description=Replaced long addition with subtraction, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=write, methodDesc=(Lokio/Buffer;J)V], indexes=[198], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Buffer.java, block=448, lineNumber=1397, description=Replaced long subtraction with addition, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeUtf8, methodDesc=(Ljava/lang/String;II)Lokio/Buffer;], indexes=[99], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=297, lineNumber=979, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=write, methodDesc=(Lokio/Buffer;J)V], indexes=[35], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Buffer.java, block=436, lineNumber=1367, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=readByteArray, methodDesc=(J)[B], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=258, lineNumber=865, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=read, methodDesc=(Lokio/Buffer;J)J], indexes=[46], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Buffer.java, block=456, lineNumber=1407, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeUtf8, methodDesc=(Ljava/lang/String;II)Lokio/Buffer;], indexes=[32], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=292, lineNumber=967, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeLong, methodDesc=(J)Lokio/Buffer;], indexes=[34], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Buffer.java, block=371, lineNumber=1202, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeLong, methodDesc=(J)Lokio/Buffer;], indexes=[99], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Buffer.java, block=371, lineNumber=1207, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeUtf8, methodDesc=(Ljava/lang/String;II)Lokio/Buffer;], indexes=[171], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Buffer.java, block=302, lineNumber=996, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=readString, methodDesc=(JLjava/nio/charset/Charset;)Ljava/lang/String;], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=201, lineNumber=713, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=readString, methodDesc=(Ljava/nio/charset/Charset;)Ljava/lang/String;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Buffer.java, block=197, lineNumber=704, description=mutated return of Object value for okio/Buffer::readString to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeLong, methodDesc=(J)Lokio/Buffer;], indexes=[73], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Buffer.java, block=371, lineNumber=1205, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writableSegment, methodDesc=(I)Lokio/Segment;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=424, lineNumber=1298, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=readFully, methodDesc=([B)V], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Buffer.java, block=262, lineNumber=880, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeLong, methodDesc=(J)Lokio/Buffer;], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Buffer.java, block=371, lineNumber=1201, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeLong, methodDesc=(J)Lokio/Buffer;], indexes=[86], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Buffer.java, block=371, lineNumber=1206, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=write, methodDesc=(Lokio/Buffer;J)V], indexes=[143], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Buffer.java, block=446, lineNumber=1387, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeUtf8, methodDesc=(Ljava/lang/String;II)Lokio/Buffer;], indexes=[152], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Buffer.java, block=299, lineNumber=992, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=readString, methodDesc=(JLjava/nio/charset/Charset;)Ljava/lang/String;], indexes=[46], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Buffer.java, block=204, lineNumber=716, description=mutated return of Object value for okio/Buffer::readString to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=request, methodDesc=(J)Z], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Buffer.java, block=13, lineNumber=117, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=write, methodDesc=(Lokio/Buffer;J)V], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=434, lineNumber=1364, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writableSegment, methodDesc=(I)Lokio/Segment;], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Buffer.java, block=425, lineNumber=1298, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeAll, methodDesc=(Lokio/Source;)J], indexes=[27], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=358, lineNumber=1143, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeUtf8, methodDesc=(Ljava/lang/String;II)Lokio/Buffer;], indexes=[141], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=298, lineNumber=990, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeLong, methodDesc=(J)Lokio/Buffer;], indexes=[60], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Buffer.java, block=371, lineNumber=1204, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=readByteArray, methodDesc=(J)[B], indexes=[43], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Buffer.java, block=260, lineNumber=871, description=mutated return of Object value for okio/Buffer::readByteArray to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeUtf8, methodDesc=(Ljava/lang/String;II)Lokio/Buffer;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=288, lineNumber=965, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=read, methodDesc=(Lokio/Buffer;J)J], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Buffer.java, block=450, lineNumber=1404, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Buffer, method=writeLong, methodDesc=(J)Lokio/Buffer;], indexes=[135], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Buffer.java, block=371, lineNumber=1211, description=mutated return of Object value for okio/Buffer::writeLong to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 1252

>>> RESULTS:
	Tool name: hybrid
	Benchmark: OKIO-9
	Class Under Test: okio.Buffer
	Run number: 1
	Tool preparation time (ms): 21034
	Tool test cases generation time (ms): 62061
	Test cases execution time (ms): 95
	Test case number: 12
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 895
	Lines covered: 87
	Lines coverage ratio (%): 9.720671
	Conditions total: 548
	Conditions covered: 32
	Conditions coverage ratio (%): 5.839416
	Mutants total: 297
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 297
Copying transcript file transcript.csv to folder results_hybrid_60/OKIO-9_1
Moving working folders and log files
Processing of folder results_hybrid_60/OKIO-9_1 has finished
=========================================
Folder results_hybrid_60/WEKA-983_1 was found
FolderName=WEKA-983_1
SUT_ID=WEKA-983
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-983_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-983 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-983_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-983

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.classifiers.bayes.net.EditableBayesNet

---Compilation---
Compiled 'weka/classifiers/bayes/net/EditableBayesNet_13_Test.java'
Compiled 'weka/classifiers/bayes/net/EditableBayesNet_20_Test.java'
Compiled 'weka/classifiers/bayes/net/EditableBayesNet_28_Test.java'
Compiled 'weka/classifiers/bayes/net/EditableBayesNet_38_Test.java'
Compiled 'weka/classifiers/bayes/net/EditableBayesNet_61_Test.java'
Compiled 'weka/classifiers/bayes/net/EditableBayesNet_62_Test.java'
Compiled 'weka/classifiers/bayes/net/EditableBayesNet_63_Test.java'
Compiled 'weka/classifiers/bayes/net/EditableBayesNet_6_Test.java'
Compiled 'weka/classifiers/bayes/net/EditableBayesNet_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.12307692307692308
Line coverage = 0.04584882280049566
Branch coverage = 0.012077294685990338
Complexity coverage = 0.029411764705882353

=== Run PIT ===
Executing Mutation Analysis using 211 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.EditableBayesNet, method=<init>, methodDesc=(Z)V], indexes=[60], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=EditableBayesNet.java, block=21, lineNumber=198, description=removed call to weka/classifiers/bayes/net/EditableBayesNet::clearUndoStack, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.EditableBayesNet, method=<init>, methodDesc=(Lweka/core/Instances;)V], indexes=[58], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=EditableBayesNet.java, block=3, lineNumber=125, description=removed call to java/lang/Exception::printStackTrace, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.EditableBayesNet, method=addUndoAction, methodDesc=(Lweka/classifiers/bayes/net/EditableBayesNet$UndoAction;)V], indexes=[32], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=EditableBayesNet.java, block=392, lineNumber=1787, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.EditableBayesNet, method=addUndoAction, methodDesc=(Lweka/classifiers/bayes/net/EditableBayesNet$UndoAction;)V], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=EditableBayesNet.java, block=390, lineNumber=1784, description=changed conditional boundary, testsInOrder=[]]
Time for mutation analysis = 959

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-983
	Class Under Test: weka.classifiers.bayes.net.EditableBayesNet
	Run number: 1
	Tool preparation time (ms): 58662
	Tool test cases generation time (ms): 61640
	Test cases execution time (ms): 118
	Test case number: 9
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 807
	Lines covered: 37
	Lines coverage ratio (%): 4.5848823
	Conditions total: 414
	Conditions covered: 5
	Conditions coverage ratio (%): 1.2077295
	Mutants total: 207
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 207
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-983_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-983_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-100_1 was found
FolderName=FASTJSON-100_1
SUT_ID=FASTJSON-100
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-100_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-100 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-100_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-100

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.util.TypeUtils

---Compilation---
Compiled 'com/alibaba/fastjson/util/TypeUtils_22_Test.java'
Compiled 'com/alibaba/fastjson/util/TypeUtils_55_Test.java'
Failed to compile 'com/alibaba/fastjson/util/TypeUtils_62_Test.java'!
Compiled 'com/alibaba/fastjson/util/TypeUtils_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.08080808080808081
Line coverage = 0.050190943807965085
Branch coverage = 0.017487046632124352
Complexity coverage = 0.014772727272727272

=== Run PIT ===
Executing Mutation Analysis using 454 mutants 
Time for mutation analysis = 1815

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-100
	Class Under Test: com.alibaba.fastjson.util.TypeUtils
	Run number: 1
	Tool preparation time (ms): 37655
	Tool test cases generation time (ms): 61779
	Test cases execution time (ms): 56
	Test case number: 4
	Uncompilable Test Classes: 1
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 1833
	Lines covered: 92
	Lines coverage ratio (%): 5.0190945
	Conditions total: 1544
	Conditions covered: 27
	Conditions coverage ratio (%): 1.7487047
	Mutants total: 454
	Mutants covered: 14
	Mutants coverage ratio (%): 3.0837004
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 454
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-100_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-100_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-36_1 was found
FolderName=FASTJSON-36_1
SUT_ID=FASTJSON-36
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-36_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-36 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-36_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-36

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.serializer.SimplePropertyPreFilter

---Compilation---
Compiled 'com/alibaba/fastjson/serializer/SimplePropertyPreFilter_0_Test.java'
Compiled 'com/alibaba/fastjson/serializer/SimplePropertyPreFilter_1_Test.java'
Compiled 'com/alibaba/fastjson/serializer/SimplePropertyPreFilter_2_Test.java'
Compiled 'com/alibaba/fastjson/serializer/SimplePropertyPreFilter_4_Test.java'
Compiled 'com/alibaba/fastjson/serializer/SimplePropertyPreFilter_5_Test.java'
Compiled 'com/alibaba/fastjson/serializer/SimplePropertyPreFilter_6_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.875
Line coverage = 0.47058823529411764
Branch coverage = 0.13636363636363635
Complexity coverage = 0.42105263157894735

=== Run PIT ===
Executing Mutation Analysis using 26 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.SimplePropertyPreFilter, method=<init>, methodDesc=(Ljava/lang/Class;[Ljava/lang/String;)V], indexes=[61], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=SimplePropertyPreFilter.java, block=3, lineNumber=35, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.SimplePropertyPreFilter, method=<init>, methodDesc=(Ljava/lang/Class;[Ljava/lang/String;)V], indexes=[42], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=SimplePropertyPreFilter.java, block=1, lineNumber=35, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.SimplePropertyPreFilter, method=getClazz, methodDesc=()Ljava/lang/Class;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SimplePropertyPreFilter.java, block=7, lineNumber=57, description=mutated return of Object value for com/alibaba/fastjson/serializer/SimplePropertyPreFilter::getClazz to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.SimplePropertyPreFilter, method=<init>, methodDesc=(Ljava/lang/Class;[Ljava/lang/String;)V], indexes=[42], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=SimplePropertyPreFilter.java, block=1, lineNumber=35, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.SimplePropertyPreFilter, method=getExcludes, methodDesc=()Ljava/util/Set;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SimplePropertyPreFilter.java, block=9, lineNumber=65, description=mutated return of Object value for com/alibaba/fastjson/serializer/SimplePropertyPreFilter::getExcludes to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.SimplePropertyPreFilter, method=getMaxLevel, methodDesc=()I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SimplePropertyPreFilter.java, block=5, lineNumber=46, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.SimplePropertyPreFilter, method=<init>, methodDesc=(Ljava/lang/Class;[Ljava/lang/String;)V], indexes=[50], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=SimplePropertyPreFilter.java, block=2, lineNumber=36, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.serializer.SimplePropertyPreFilter, method=getIncludes, methodDesc=()Ljava/util/Set;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SimplePropertyPreFilter.java, block=8, lineNumber=61, description=mutated return of Object value for com/alibaba/fastjson/serializer/SimplePropertyPreFilter::getIncludes to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 154

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-36
	Class Under Test: com.alibaba.fastjson.serializer.SimplePropertyPreFilter
	Run number: 1
	Tool preparation time (ms): 38284
	Tool test cases generation time (ms): 62085
	Test cases execution time (ms): 41
	Test case number: 6
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 34
	Lines covered: 16
	Lines coverage ratio (%): 47.058823
	Conditions total: 22
	Conditions covered: 3
	Conditions coverage ratio (%): 13.636364
	Mutants total: 26
	Mutants covered: 8
	Mutants coverage ratio (%): 30.769232
	Mutants killed: 8
	Mutants killed ratio (%): 30.769232
	Mutants alive: 18
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-36_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-36_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-113_1 was found
FolderName=FASTJSON-113_1
SUT_ID=FASTJSON-113
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-113_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-113 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-113_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-113

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.asm.TypeCollector

---Compilation---
Compiled 'com/alibaba/fastjson/asm/TypeCollector_0_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_12_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_1_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_2_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_3_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_4_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_52_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_5_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_63_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_6_Test.java'
Compiled 'com/alibaba/fastjson/asm/TypeCollector_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.875
Line coverage = 0.42857142857142855
Branch coverage = 0.3125
Complexity coverage = 0.4583333333333333

=== Run PIT ===
Executing Mutation Analysis using 33 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=visitMethod, methodDesc=(ILjava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/MethodCollector;], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TypeCollector.java, block=3, lineNumber=44, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=hasJsonType, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=TypeCollector.java, block=33, lineNumber=107, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=getParameterNamesForMethod, methodDesc=()[Ljava/lang/String;], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=TypeCollector.java, block=29, lineNumber=99, description=mutated return of Object value for com/alibaba/fastjson/asm/TypeCollector::getParameterNamesForMethod to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=visitAnnotation, methodDesc=(Ljava/lang/String;)V], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TypeCollector.java, block=18, lineNumber=72, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=visitMethod, methodDesc=(ILjava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/MethodCollector;], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=TypeCollector.java, block=4, lineNumber=45, description=mutated return of Object value for com/alibaba/fastjson/asm/TypeCollector::visitMethod to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=matched, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TypeCollector.java, block=30, lineNumber=103, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=getParameterNamesForMethod, methodDesc=()[Ljava/lang/String;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TypeCollector.java, block=27, lineNumber=96, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=visitMethod, methodDesc=(ILjava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/MethodCollector;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=TypeCollector.java, block=2, lineNumber=41, description=mutated return of Object value for com/alibaba/fastjson/asm/TypeCollector::visitMethod to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=matched, methodDesc=()Z], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=TypeCollector.java, block=32, lineNumber=103, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=getParameterNamesForMethod, methodDesc=()[Ljava/lang/String;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TypeCollector.java, block=26, lineNumber=96, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=getParameterNamesForMethod, methodDesc=()[Ljava/lang/String;], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=TypeCollector.java, block=28, lineNumber=97, description=mutated return of Object value for com/alibaba/fastjson/asm/TypeCollector::getParameterNamesForMethod to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.asm.TypeCollector, method=visitMethod, methodDesc=(ILjava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/MethodCollector;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=TypeCollector.java, block=1, lineNumber=40, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 210

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-113
	Class Under Test: com.alibaba.fastjson.asm.TypeCollector
	Run number: 1
	Tool preparation time (ms): 37374
	Tool test cases generation time (ms): 61909
	Test cases execution time (ms): 62
	Test case number: 11
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 42
	Lines covered: 18
	Lines coverage ratio (%): 42.857143
	Conditions total: 32
	Conditions covered: 10
	Conditions coverage ratio (%): 31.25
	Mutants total: 33
	Mutants covered: 12
	Mutants coverage ratio (%): 36.363636
	Mutants killed: 12
	Mutants killed ratio (%): 36.363636
	Mutants alive: 21
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-113_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-113_1 has finished
=========================================
Folder results_hybrid_60/SEATA-6_1 was found
FolderName=SEATA-6_1
SUT_ID=SEATA-6
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SEATA-6_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SEATA-6 . 1 60 --only-compute-metrics results_hybrid_60//SEATA-6_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SEATA-6

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: io.seata.core.rpc.ShutdownHook

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SEATA-6
	Class Under Test: io.seata.core.rpc.ShutdownHook
	Run number: 1
	Tool preparation time (ms): 88617
	Tool test cases generation time (ms): 5070
	Test cases execution time (ms): 16
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 25
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 8
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SEATA-6_1
Moving working folders and log files
Processing of folder results_hybrid_60/SEATA-6_1 has finished
=========================================
Folder results_hybrid_60/SPOON-82_1 was found
FolderName=SPOON-82_1
SUT_ID=SPOON-82
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-82_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-82 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-82_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-82

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.support.DefaultCoreFactory

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-82
	Class Under Test: spoon.support.DefaultCoreFactory
	Run number: 1
	Tool preparation time (ms): 133109
	Tool test cases generation time (ms): 61299
	Test cases execution time (ms): 15
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 438
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 166
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-82_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-82_1 has finished
=========================================
Folder results_hybrid_60/SPOON-35_1 was found
FolderName=SPOON-35_1
SUT_ID=SPOON-35
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-35_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-35 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-35_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-35

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.reflect.visitor.EarlyTerminatingScanner

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-35
	Class Under Test: spoon.reflect.visitor.EarlyTerminatingScanner
	Run number: 1
	Tool preparation time (ms): 130410
	Tool test cases generation time (ms): 61241
	Test cases execution time (ms): 15
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 73
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 44
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-35_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-35_1 has finished
=========================================
Folder results_hybrid_60/OKIO-30_1 was found
FolderName=OKIO-30_1
SUT_ID=OKIO-30
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//OKIO-30_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid OKIO-30 . 1 60 --only-compute-metrics results_hybrid_60//OKIO-30_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  OKIO-30

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: okio.Options

---Compilation---
Compiled 'okio/Options_0_Test.java'
Compiled 'okio/Options_1_Test.java'
Compiled 'okio/Options_2_Test.java'
Compiled 'okio/Options_3_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.5
Line coverage = 0.07142857142857142
Branch coverage = 0.016129032258064516
Complexity coverage = 0.08108108108108109

=== Run PIT ===
Executing Mutation Analysis using 100 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Options, method=of, methodDesc=([Lokio/ByteString;)Lokio/Options;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Options.java, block=1, lineNumber=36, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Options, method=size, methodDesc=()I], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Options.java, block=60, lineNumber=245, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Options, method=of, methodDesc=([Lokio/ByteString;)Lokio/Options;], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Options.java, block=2, lineNumber=38, description=mutated return of Object value for okio/Options::of to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 247

>>> RESULTS:
	Tool name: hybrid
	Benchmark: OKIO-30
	Class Under Test: okio.Options
	Run number: 1
	Tool preparation time (ms): 19422
	Tool test cases generation time (ms): 61249
	Test cases execution time (ms): 29
	Test case number: 4
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 98
	Lines covered: 7
	Lines coverage ratio (%): 7.1428576
	Conditions total: 62
	Conditions covered: 1
	Conditions coverage ratio (%): 1.6129031
	Mutants total: 100
	Mutants covered: 3
	Mutants coverage ratio (%): 3.0
	Mutants killed: 3
	Mutants killed ratio (%): 3.0
	Mutants alive: 97
Copying transcript file transcript.csv to folder results_hybrid_60/OKIO-30_1
Moving working folders and log files
Processing of folder results_hybrid_60/OKIO-30_1 has finished
=========================================
Folder results_hybrid_60/SPOON-39_1 was found
FolderName=SPOON-39_1
SUT_ID=SPOON-39
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-39_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-39 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-39_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-39

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.support.visitor.ProcessingVisitor

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-39
	Class Under Test: spoon.support.visitor.ProcessingVisitor
	Run number: 1
	Tool preparation time (ms): 132667
	Tool test cases generation time (ms): 61084
	Test cases execution time (ms): 16
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 27
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 22
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-39_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-39_1 has finished
=========================================
Folder results_hybrid_60/WEKA-763_1 was found
FolderName=WEKA-763_1
SUT_ID=WEKA-763
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-763_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-763 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-763_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-763

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.classifiers.trees.ht.GaussianConditionalSufficientStats

---Compilation---
Compiled 'weka/classifiers/trees/ht/GaussianConditionalSufficientStats_3_Test.java'
Compiled 'weka/classifiers/trees/ht/GaussianConditionalSufficientStats_4_Test.java'
Compiled 'weka/classifiers/trees/ht/GaussianConditionalSufficientStats_7_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.375
Line coverage = 0.08045977011494253
Branch coverage = 0.0
Complexity coverage = 0.09375

=== Run PIT ===
Executing Mutation Analysis using 54 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.trees.ht.GaussianConditionalSufficientStats, method=getNumBins, methodDesc=()I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=GaussianConditionalSufficientStats.java, block=2, lineNumber=107, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
Time for mutation analysis = 180

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-763
	Class Under Test: weka.classifiers.trees.ht.GaussianConditionalSufficientStats
	Run number: 1
	Tool preparation time (ms): 59795
	Tool test cases generation time (ms): 19232
	Test cases execution time (ms): 27
	Test case number: 3
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 87
	Lines covered: 7
	Lines coverage ratio (%): 8.045978
	Conditions total: 48
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 54
	Mutants covered: 1
	Mutants coverage ratio (%): 1.8518518
	Mutants killed: 1
	Mutants killed ratio (%): 1.8518518
	Mutants alive: 53
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-763_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-763_1 has finished
=========================================
Folder results_hybrid_60/WEKA-148_1 was found
FolderName=WEKA-148_1
SUT_ID=WEKA-148
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-148_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-148 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-148_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-148

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.classifiers.ParallelMultipleClassifiersCombiner

---Compilation---
Compiled 'weka/classifiers/ParallelMultipleClassifiersCombiner_10_Test.java'
Compiled 'weka/classifiers/ParallelMultipleClassifiersCombiner_2_Test.java'
Compiled 'weka/classifiers/ParallelMultipleClassifiersCombiner_4_Test.java'
Compiled 'weka/classifiers/ParallelMultipleClassifiersCombiner_5_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.3333333333333333
Line coverage = 0.140625
Branch coverage = 0.0
Complexity coverage = 0.13793103448275862

=== Run PIT ===
Executing Mutation Analysis using 51 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.ParallelMultipleClassifiersCombiner, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=ParallelMultipleClassifiersCombiner.java, block=1, lineNumber=73, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.ParallelMultipleClassifiersCombiner, method=getNumExecutionSlots, methodDesc=()I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ParallelMultipleClassifiersCombiner.java, block=7, lineNumber=140, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.ParallelMultipleClassifiersCombiner, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ParallelMultipleClassifiersCombiner.java, block=1, lineNumber=80, description=mutated return of Object value for weka/classifiers/ParallelMultipleClassifiersCombiner::listOptions to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 200

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-148
	Class Under Test: weka.classifiers.ParallelMultipleClassifiersCombiner
	Run number: 1
	Tool preparation time (ms): 59023
	Tool test cases generation time (ms): 61635
	Test cases execution time (ms): 94
	Test case number: 4
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 64
	Lines covered: 9
	Lines coverage ratio (%): 14.0625
	Conditions total: 34
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 51
	Mutants covered: 3
	Mutants coverage ratio (%): 5.882353
	Mutants killed: 3
	Mutants killed ratio (%): 5.882353
	Mutants alive: 48
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-148_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-148_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-118_1 was found
FolderName=GUAVA-118_1
SUT_ID=GUAVA-118
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-118_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-118 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-118_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-118

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.base.FinalizableReferenceQueue

---Compilation---
Compiled 'com/google/common/base/FinalizableReferenceQueue_0_Test.java'
Compiled 'com/google/common/base/FinalizableReferenceQueue_2_Test.java'
Compiled 'com/google/common/base/FinalizableReferenceQueue_3_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 1.0
Line coverage = 0.631578947368421
Branch coverage = 0.5
Complexity coverage = 0.7

=== Run PIT ===
Executing Mutation Analysis using 11 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.FinalizableReferenceQueue, method=getStartFinalizer, methodDesc=(Ljava/lang/Class;)Ljava/lang/reflect/Method;], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=FinalizableReferenceQueue.java, block=15, lineNumber=346, description=mutated return of Object value for com/google/common/base/FinalizableReferenceQueue::getStartFinalizer to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.FinalizableReferenceQueue, method=loadFinalizer, methodDesc=([Lcom/google/common/base/FinalizableReferenceQueue$FinalizerLoader;)Ljava/lang/Class;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=FinalizableReferenceQueue.java, block=10, lineNumber=213, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.FinalizableReferenceQueue, method=loadFinalizer, methodDesc=([Lcom/google/common/base/FinalizableReferenceQueue$FinalizerLoader;)Ljava/lang/Class;], indexes=[35], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=FinalizableReferenceQueue.java, block=13, lineNumber=213, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.FinalizableReferenceQueue, method=loadFinalizer, methodDesc=([Lcom/google/common/base/FinalizableReferenceQueue$FinalizerLoader;)Ljava/lang/Class;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=FinalizableReferenceQueue.java, block=10, lineNumber=213, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.FinalizableReferenceQueue, method=loadFinalizer, methodDesc=([Lcom/google/common/base/FinalizableReferenceQueue$FinalizerLoader;)Ljava/lang/Class;], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=FinalizableReferenceQueue.java, block=12, lineNumber=216, description=mutated return of Object value for com/google/common/base/FinalizableReferenceQueue::loadFinalizer to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.FinalizableReferenceQueue, method=close, methodDesc=()V], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=FinalizableReferenceQueue.java, block=3, lineNumber=179, description=removed call to com/google/common/base/FinalizableReferenceQueue::cleanUp, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.FinalizableReferenceQueue, method=cleanUp, methodDesc=()V], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=FinalizableReferenceQueue.java, block=4, lineNumber=188, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.FinalizableReferenceQueue, method=loadFinalizer, methodDesc=([Lcom/google/common/base/FinalizableReferenceQueue$FinalizerLoader;)Ljava/lang/Class;], indexes=[27], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=FinalizableReferenceQueue.java, block=11, lineNumber=215, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 137

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-118
	Class Under Test: com.google.common.base.FinalizableReferenceQueue
	Run number: 1
	Tool preparation time (ms): 30800
	Tool test cases generation time (ms): 61351
	Test cases execution time (ms): 38
	Test case number: 3
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 38
	Lines covered: 24
	Lines coverage ratio (%): 63.15789
	Conditions total: 8
	Conditions covered: 4
	Conditions coverage ratio (%): 50.0
	Mutants total: 11
	Mutants covered: 8
	Mutants coverage ratio (%): 72.72727
	Mutants killed: 8
	Mutants killed ratio (%): 72.72727
	Mutants alive: 3
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-118_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-118_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-29_1 was found
FolderName=FASTJSON-29_1
SUT_ID=FASTJSON-29
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-29_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-29 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-29_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-29

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-29
	Class Under Test: com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory
	Run number: 1
	Tool preparation time (ms): 39090
	Tool test cases generation time (ms): 24389
	Test cases execution time (ms): 7
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 1303
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 264
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-29_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-29_1 has finished
=========================================
Folder results_hybrid_60/SEATA-27_1 was found
FolderName=SEATA-27_1
SUT_ID=SEATA-27
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SEATA-27_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SEATA-27 . 1 60 --only-compute-metrics results_hybrid_60//SEATA-27_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SEATA-27

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: io.seata.core.store.StoreMode

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SEATA-27
	Class Under Test: io.seata.core.store.StoreMode
	Run number: 1
	Tool preparation time (ms): 89108
	Tool test cases generation time (ms): 5262
	Test cases execution time (ms): 18
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 12
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 4
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SEATA-27_1
Moving working folders and log files
Processing of folder results_hybrid_60/SEATA-27_1 has finished
=========================================
Folder results_hybrid_60/WEKA-1006_1 was found
FolderName=WEKA-1006_1
SUT_ID=WEKA-1006
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-1006_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-1006 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-1006_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-1006

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.beans.Saver

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-1006
	Class Under Test: weka.gui.beans.Saver
	Run number: 1
	Tool preparation time (ms): 60058
	Tool test cases generation time (ms): 61215
	Test cases execution time (ms): 5
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 268
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 98
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-1006_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-1006_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-231_1 was found
FolderName=GUAVA-231_1
SUT_ID=GUAVA-231
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-231_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-231 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-231_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-231

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.reflect.TypeResolver

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-231
	Class Under Test: com.google.common.reflect.TypeResolver
	Run number: 1
	Tool preparation time (ms): 29890
	Tool test cases generation time (ms): 2071
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 50
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 16
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-231_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-231_1 has finished
=========================================
Folder results_hybrid_60/SPOON-25_1 was found
FolderName=SPOON-25_1
SUT_ID=SPOON-25
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-25_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-25 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-25_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-25

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.reflect.visitor.MinimalImportScanner

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 4

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-25
	Class Under Test: spoon.reflect.visitor.MinimalImportScanner
	Run number: 1
	Tool preparation time (ms): 131208
	Tool test cases generation time (ms): 61243
	Test cases execution time (ms): 15
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 36
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 30
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-25_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-25_1 has finished
=========================================
Folder results_hybrid_60/WEKA-592_1 was found
FolderName=WEKA-592_1
SUT_ID=WEKA-592
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-592_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-592 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-592_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-592

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.beans.SubstringLabelerCustomizer

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-592
	Class Under Test: weka.gui.beans.SubstringLabelerCustomizer
	Run number: 1
	Tool preparation time (ms): 57615
	Tool test cases generation time (ms): 61456
	Test cases execution time (ms): 6
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 153
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 16
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-592_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-592_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-79_1 was found
FolderName=FASTJSON-79_1
SUT_ID=FASTJSON-79
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-79_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-79 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-79_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-79

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.JSONObject

---Compilation---
Compiled 'com/alibaba/fastjson/JSONObject_21_Test.java'
Compiled 'com/alibaba/fastjson/JSONObject_40_Test.java'
Compiled 'com/alibaba/fastjson/JSONObject_47_Test.java'
Compiled 'com/alibaba/fastjson/JSONObject_49_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.09090909090909091
Line coverage = 0.05116279069767442
Branch coverage = 0.018518518518518517
Complexity coverage = 0.045871559633027525

=== Run PIT ===
Executing Mutation Analysis using 133 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONObject, method=entrySet, methodDesc=()Ljava/util/Set;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=JSONObject.java, block=86, lineNumber=387, description=mutated return of Object value for com/alibaba/fastjson/JSONObject::entrySet to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONObject, method=<init>, methodDesc=(Ljava/util/Map;)V], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSONObject.java, block=1, lineNumber=67, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONObject, method=getInnerMap, methodDesc=()Ljava/util/Map;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=JSONObject.java, block=126, lineNumber=489, description=mutated return of Object value for com/alibaba/fastjson/JSONObject::getInnerMap to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.JSONObject, method=<init>, methodDesc=(IZ)V], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JSONObject.java, block=6, lineNumber=82, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 308

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-79
	Class Under Test: com.alibaba.fastjson.JSONObject
	Run number: 1
	Tool preparation time (ms): 37623
	Tool test cases generation time (ms): 61284
	Test cases execution time (ms): 164
	Test case number: 4
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 215
	Lines covered: 11
	Lines coverage ratio (%): 5.116279
	Conditions total: 108
	Conditions covered: 2
	Conditions coverage ratio (%): 1.8518518
	Mutants total: 129
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 129
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-79_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-79_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-254_1 was found
FolderName=GUAVA-254_1
SUT_ID=GUAVA-254
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-254_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-254 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-254_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-254

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.hash.HashCode

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-254
	Class Under Test: com.google.common.hash.HashCode
	Run number: 1
	Tool preparation time (ms): 31068
	Tool test cases generation time (ms): 2078
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 43
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 28
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-254_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-254_1 has finished
=========================================
Folder results_hybrid_60/WEKA-871_1 was found
FolderName=WEKA-871_1
SUT_ID=WEKA-871
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-871_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-871 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-871_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-871

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.core.matrix.FloatingPointFormat

---Compilation---
Compiled 'weka/core/matrix/FloatingPointFormat_1_Test.java'
Compiled 'weka/core/matrix/FloatingPointFormat_6_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.4444444444444444
Line coverage = 0.46511627906976744
Branch coverage = 0.08333333333333333
Complexity coverage = 0.19047619047619047

=== Run PIT ===
Executing Mutation Analysis using 37 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=pattern, methodDesc=(II)Ljava/lang/String;], indexes=[48], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=FloatingPointFormat.java, block=21, lineNumber=107, description=mutated return of Object value for weka/core/matrix/FloatingPointFormat::pattern to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=<init>, methodDesc=(II)V], indexes=[35], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=FloatingPointFormat.java, block=2, lineNumber=63, description=removed call to java/text/DecimalFormat::setPositivePrefix, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=pattern, methodDesc=(II)Ljava/lang/String;], indexes=[12], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=FloatingPointFormat.java, block=19, lineNumber=101, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=pattern, methodDesc=(II)Ljava/lang/String;], indexes=[22], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=FloatingPointFormat.java, block=19, lineNumber=102, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=pattern, methodDesc=(II)Ljava/lang/String;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=FloatingPointFormat.java, block=19, lineNumber=101, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=padding, methodDesc=(IC)Ljava/lang/StringBuffer;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=FloatingPointFormat.java, block=24, lineNumber=117, description=mutated return of Object value for weka/core/matrix/FloatingPointFormat::padding to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=padding, methodDesc=(IC)Ljava/lang/StringBuffer;], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=FloatingPointFormat.java, block=22, lineNumber=113, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=padding, methodDesc=(IC)Ljava/lang/StringBuffer;], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=FloatingPointFormat.java, block=23, lineNumber=113, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=<init>, methodDesc=(II)V], indexes=[41], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=FloatingPointFormat.java, block=2, lineNumber=64, description=removed call to java/text/DecimalFormat::setNegativePrefix, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.matrix.FloatingPointFormat, method=padding, methodDesc=(IC)Ljava/lang/StringBuffer;], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=FloatingPointFormat.java, block=22, lineNumber=113, description=changed conditional boundary, testsInOrder=[]]
Time for mutation analysis = 188

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-871
	Class Under Test: weka.core.matrix.FloatingPointFormat
	Run number: 1
	Tool preparation time (ms): 58270
	Tool test cases generation time (ms): 61247
	Test cases execution time (ms): 19
	Test case number: 2
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 43
	Lines covered: 20
	Lines coverage ratio (%): 46.51163
	Conditions total: 24
	Conditions covered: 2
	Conditions coverage ratio (%): 8.333334
	Mutants total: 37
	Mutants covered: 10
	Mutants coverage ratio (%): 27.027025
	Mutants killed: 10
	Mutants killed ratio (%): 27.027025
	Mutants alive: 27
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-871_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-871_1 has finished
=========================================
Folder results_hybrid_60/SEATA-5_1 was found
FolderName=SEATA-5_1
SUT_ID=SEATA-5
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SEATA-5_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SEATA-5 . 1 60 --only-compute-metrics results_hybrid_60//SEATA-5_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SEATA-5

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: io.seata.core.rpc.netty.v1.ProtocolV1Decoder

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SEATA-5
	Class Under Test: io.seata.core.rpc.netty.v1.ProtocolV1Decoder
	Run number: 1
	Tool preparation time (ms): 89576
	Tool test cases generation time (ms): 5077
	Test cases execution time (ms): 14
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 47
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 14
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SEATA-5_1
Moving working folders and log files
Processing of folder results_hybrid_60/SEATA-5_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-108_1 was found
FolderName=GUAVA-108_1
SUT_ID=GUAVA-108
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-108_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-108 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-108_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-108

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.collect.Range

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 1

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-108
	Class Under Test: com.google.common.collect.Range
	Run number: 1
	Tool preparation time (ms): 29998
	Tool test cases generation time (ms): 61087
	Test cases execution time (ms): 7
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 121
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 98
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-108_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-108_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-108_1 was found
FolderName=FASTJSON-108_1
SUT_ID=FASTJSON-108
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-108_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-108 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-108_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-108

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.parser.DefaultJSONParser

---Compilation---
Compiled 'com/alibaba/fastjson/parser/DefaultJSONParser_27_Test.java'
Compiled 'com/alibaba/fastjson/parser/DefaultJSONParser_57_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.078125
Line coverage = 0.030991735537190084
Branch coverage = 0.01155115511551155
Complexity coverage = 0.0158311345646438

=== Run PIT ===
Executing Mutation Analysis using 199 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.DefaultJSONParser, method=<init>, methodDesc=(Ljava/lang/Object;Lcom/alibaba/fastjson/parser/JSONLexer;Lcom/alibaba/fastjson/parser/ParserConfig;)V], indexes=[93], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=DefaultJSONParser.java, block=13, lineNumber=160, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 769

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-108
	Class Under Test: com.alibaba.fastjson.parser.DefaultJSONParser
	Run number: 1
	Tool preparation time (ms): 37764
	Tool test cases generation time (ms): 61263
	Test cases execution time (ms): 164
	Test case number: 2
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 968
	Lines covered: 30
	Lines coverage ratio (%): 3.0991735
	Conditions total: 606
	Conditions covered: 7
	Conditions coverage ratio (%): 1.1551155
	Mutants total: 199
	Mutants covered: 1
	Mutants coverage ratio (%): 0.5025126
	Mutants killed: 1
	Mutants killed ratio (%): 0.5025126
	Mutants alive: 198
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-108_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-108_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-3_1 was found
FolderName=FASTJSON-3_1
SUT_ID=FASTJSON-3
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-3_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-3 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-3_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-3

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.serializer.GuavaCodec

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-3
	Class Under Test: com.alibaba.fastjson.serializer.GuavaCodec
	Run number: 1
	Tool preparation time (ms): 37760
	Tool test cases generation time (ms): 61247
	Test cases execution time (ms): 9
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 22
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 10
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-3_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-3_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-200_1 was found
FolderName=GUAVA-200_1
SUT_ID=GUAVA-200
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-200_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-200 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-200_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-200

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.util.concurrent.MoreExecutors

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-200
	Class Under Test: com.google.common.util.concurrent.MoreExecutors
	Run number: 1
	Tool preparation time (ms): 30931
	Tool test cases generation time (ms): 2069
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 137
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 36
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-200_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-200_1 has finished
=========================================
Folder results_hybrid_60/WEKA-53_1 was found
FolderName=WEKA-53_1
SUT_ID=WEKA-53
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-53_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-53 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-53_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-53

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.SetInstancesPanel

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-53
	Class Under Test: weka.gui.SetInstancesPanel
	Run number: 1
	Tool preparation time (ms): 58711
	Tool test cases generation time (ms): 61250
	Test cases execution time (ms): 5
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 145
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 38
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-53_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-53_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-65_1 was found
FolderName=FASTJSON-65_1
SUT_ID=FASTJSON-65
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-65_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-65 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-65_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-65

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.parser.SymbolTable

---Compilation---
Compiled 'com/alibaba/fastjson/parser/SymbolTable_0_Test.java'
Compiled 'com/alibaba/fastjson/parser/SymbolTable_14_Test.java'
Compiled 'com/alibaba/fastjson/parser/SymbolTable_1_Test.java'
Compiled 'com/alibaba/fastjson/parser/SymbolTable_3_Test.java'
Compiled 'com/alibaba/fastjson/parser/SymbolTable_5_Test.java'
Compiled 'com/alibaba/fastjson/parser/SymbolTable_7_Test.java'
Compiled 'com/alibaba/fastjson/parser/SymbolTable_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 1.0
Line coverage = 0.58
Branch coverage = 0.23076923076923078
Complexity coverage = 0.4

=== Run PIT ===
Executing Mutation Analysis using 36 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=(Ljava/lang/String;IIIZ)Ljava/lang/String;], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=SymbolTable.java, block=16, lineNumber=90, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=(Ljava/lang/String;IIIZ)Ljava/lang/String;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=SymbolTable.java, block=15, lineNumber=86, description=Replaced bitwise AND with OR, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=hash, methodDesc=([CII)I], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=SymbolTable.java, block=27, lineNumber=123, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=(Ljava/lang/String;III)Ljava/lang/String;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SymbolTable.java, block=14, lineNumber=82, description=mutated return of Object value for com/alibaba/fastjson/parser/SymbolTable::addSymbol to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=hash, methodDesc=([CII)I], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=SymbolTable.java, block=26, lineNumber=123, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=([CII)Ljava/lang/String;], indexes=[16], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SymbolTable.java, block=1, lineNumber=39, description=mutated return of Object value for com/alibaba/fastjson/parser/SymbolTable::addSymbol to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=hash, methodDesc=([CII)I], indexes=[37], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SymbolTable.java, block=28, lineNumber=126, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=(Ljava/lang/String;IIIZ)Ljava/lang/String;], indexes=[72], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=SymbolTable.java, block=22, lineNumber=105, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=(Ljava/lang/String;IIIZ)Ljava/lang/String;], indexes=[101], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SymbolTable.java, block=24, lineNumber=110, description=mutated return of Object value for com/alibaba/fastjson/parser/SymbolTable::addSymbol to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=([CIII)Ljava/lang/String;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=SymbolTable.java, block=2, lineNumber=52, description=Replaced bitwise AND with OR, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=<init>, methodDesc=(I)V], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=SymbolTable.java, block=0, lineNumber=29, description=Replaced integer subtraction with addition, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=([CIII)Ljava/lang/String;], indexes=[115], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SymbolTable.java, block=13, lineNumber=78, description=mutated return of Object value for com/alibaba/fastjson/parser/SymbolTable::addSymbol to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=([CIII)Ljava/lang/String;], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=SymbolTable.java, block=2, lineNumber=55, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=hash, methodDesc=([CII)I], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=SymbolTable.java, block=26, lineNumber=123, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.parser.SymbolTable, method=addSymbol, methodDesc=(Ljava/lang/String;IIIZ)Ljava/lang/String;], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=SymbolTable.java, block=15, lineNumber=89, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 198

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-65
	Class Under Test: com.alibaba.fastjson.parser.SymbolTable
	Run number: 1
	Tool preparation time (ms): 37819
	Tool test cases generation time (ms): 61400
	Test cases execution time (ms): 61
	Test case number: 7
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 50
	Lines covered: 29
	Lines coverage ratio (%): 58.0
	Conditions total: 26
	Conditions covered: 6
	Conditions coverage ratio (%): 23.076923
	Mutants total: 36
	Mutants covered: 15
	Mutants coverage ratio (%): 41.666664
	Mutants killed: 15
	Mutants killed ratio (%): 41.666664
	Mutants alive: 21
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-65_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-65_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-61_1 was found
FolderName=FASTJSON-61_1
SUT_ID=FASTJSON-61
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-61_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-61 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-61_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-61

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.serializer.ASMSerializerFactory

---Compilation---
Compiled 'com/alibaba/fastjson/serializer/ASMSerializerFactory_1_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.06666666666666667
Line coverage = 0.008797653958944282
Branch coverage = 0.0
Complexity coverage = 0.008733624454148471

=== Run PIT ===
Executing Mutation Analysis using 404 mutants 
Time for mutation analysis = 1703

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-61
	Class Under Test: com.alibaba.fastjson.serializer.ASMSerializerFactory
	Run number: 1
	Tool preparation time (ms): 37160
	Tool test cases generation time (ms): 22524
	Test cases execution time (ms): 94
	Test case number: 1
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 1364
	Lines covered: 12
	Lines coverage ratio (%): 0.8797654
	Conditions total: 398
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 404
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 404
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-61_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-61_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-181_1 was found
FolderName=GUAVA-181_1
SUT_ID=GUAVA-181
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-181_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-181 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-181_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-181

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.cache.CacheStats

---Compilation---
Compiled 'com/google/common/cache/CacheStats_0_Test.java'
Compiled 'com/google/common/cache/CacheStats_10_Test.java'
Compiled 'com/google/common/cache/CacheStats_11_Test.java'
Compiled 'com/google/common/cache/CacheStats_12_Test.java'
Compiled 'com/google/common/cache/CacheStats_13_Test.java'
Compiled 'com/google/common/cache/CacheStats_14_Test.java'
Compiled 'com/google/common/cache/CacheStats_17_Test.java'
Compiled 'com/google/common/cache/CacheStats_1_Test.java'
Compiled 'com/google/common/cache/CacheStats_2_Test.java'
Compiled 'com/google/common/cache/CacheStats_3_Test.java'
Compiled 'com/google/common/cache/CacheStats_4_Test.java'
Compiled 'com/google/common/cache/CacheStats_5_Test.java'
Compiled 'com/google/common/cache/CacheStats_6_Test.java'
Compiled 'com/google/common/cache/CacheStats_7_Test.java'
Compiled 'com/google/common/cache/CacheStats_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.8333333333333334
Line coverage = 0.7586206896551724
Branch coverage = 0.35294117647058826
Complexity coverage = 0.4857142857142857

=== Run PIT ===
Executing Mutation Analysis using 51 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[66], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=8, lineNumber=89, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=averageLoadPenalty, methodDesc=()D], indexes=[27], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=31, lineNumber=226, description=replaced return of double value with -(x + 1) for com/google/common/cache/CacheStats::averageLoadPenalty, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[66], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=CacheStats.java, block=8, lineNumber=89, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=requestCount, methodDesc=()J], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=13, lineNumber=109, description=replaced return of long value with value + 1 for com/google/common/cache/CacheStats::requestCount, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[88], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=CacheStats.java, block=12, lineNumber=90, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=loadCount, methodDesc=()J], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=22, lineNumber=161, description=replaced return of long value with value + 1 for com/google/common/cache/CacheStats::loadCount, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=hitRate, methodDesc=()D], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=CacheStats.java, block=17, lineNumber=124, description=Replaced double division with multiplication, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=CacheStats.java, block=0, lineNumber=85, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=missRate, methodDesc=()D], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=CacheStats.java, block=21, lineNumber=148, description=Replaced double division with multiplication, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=minus, methodDesc=(Lcom/google/common/cache/CacheStats;)Lcom/google/common/cache/CacheStats;], indexes=[62], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=33, lineNumber=243, description=mutated return of Object value for com/google/common/cache/CacheStats::minus to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=CacheStats.java, block=2, lineNumber=85, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=hitCount, methodDesc=()J], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=14, lineNumber=114, description=replaced return of long value with value + 1 for com/google/common/cache/CacheStats::hitCount, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=hitRate, methodDesc=()D], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=15, lineNumber=124, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=loadSuccessCount, methodDesc=()J], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=23, lineNumber=175, description=replaced return of long value with value + 1 for com/google/common/cache/CacheStats::loadSuccessCount, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=averageLoadPenalty, methodDesc=()D], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=CacheStats.java, block=31, lineNumber=226, description=Replaced double division with multiplication, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[52], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=CacheStats.java, block=6, lineNumber=88, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=plus, methodDesc=(Lcom/google/common/cache/CacheStats;)Lcom/google/common/cache/CacheStats;], indexes=[50], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=34, lineNumber=263, description=mutated return of Object value for com/google/common/cache/CacheStats::plus to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[52], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=6, lineNumber=88, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[32], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=CacheStats.java, block=4, lineNumber=86, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=loadExceptionRate, methodDesc=()D], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=CacheStats.java, block=27, lineNumber=203, description=Replaced double division with multiplication, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=CacheStats.java, block=4, lineNumber=87, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=4, lineNumber=87, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=loadExceptionCount, methodDesc=()J], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=24, lineNumber=189, description=replaced return of long value with value + 1 for com/google/common/cache/CacheStats::loadExceptionCount, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=loadExceptionRate, methodDesc=()D], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=25, lineNumber=203, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=totalLoadTime, methodDesc=()J], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=28, lineNumber=213, description=replaced return of long value with value + 1 for com/google/common/cache/CacheStats::totalLoadTime, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=2, lineNumber=86, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[46], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=CacheStats.java, block=6, lineNumber=87, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=missRate, methodDesc=()D], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=21, lineNumber=148, description=replaced return of double value with -(x + 1) for com/google/common/cache/CacheStats::missRate, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[80], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=10, lineNumber=90, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=missCount, methodDesc=()J], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=18, lineNumber=134, description=replaced return of long value with value + 1 for com/google/common/cache/CacheStats::missCount, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=hitRate, methodDesc=()D], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=17, lineNumber=124, description=replaced return of double value with -(x + 1) for com/google/common/cache/CacheStats::hitRate, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=averageLoadPenalty, methodDesc=()D], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=29, lineNumber=226, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[80], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=CacheStats.java, block=10, lineNumber=90, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[74], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=CacheStats.java, block=10, lineNumber=89, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=missRate, methodDesc=()D], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=19, lineNumber=148, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[60], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=CacheStats.java, block=8, lineNumber=88, description=removed call to com/google/common/base/Preconditions::checkArgument, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=CacheStats.java, block=0, lineNumber=85, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=evictionCount, methodDesc=()J], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=32, lineNumber=234, description=replaced return of long value with value + 1 for com/google/common/cache/CacheStats::evictionCount, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=<init>, methodDesc=(JJJJJJ)V], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=CacheStats.java, block=2, lineNumber=86, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.cache.CacheStats, method=loadExceptionRate, methodDesc=()D], indexes=[27], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=CacheStats.java, block=27, lineNumber=203, description=replaced return of double value with -(x + 1) for com/google/common/cache/CacheStats::loadExceptionRate, testsInOrder=[]]
Time for mutation analysis = 436

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-181
	Class Under Test: com.google.common.cache.CacheStats
	Run number: 1
	Tool preparation time (ms): 29511
	Tool test cases generation time (ms): 61642
	Test cases execution time (ms): 71
	Test case number: 15
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 58
	Lines covered: 44
	Lines coverage ratio (%): 75.86207
	Conditions total: 34
	Conditions covered: 12
	Conditions coverage ratio (%): 35.294117
	Mutants total: 51
	Mutants covered: 40
	Mutants coverage ratio (%): 78.43137
	Mutants killed: 40
	Mutants killed ratio (%): 78.43137
	Mutants alive: 11
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-181_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-181_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-11_1 was found
FolderName=FASTJSON-11_1
SUT_ID=FASTJSON-11
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-11_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-11 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-11_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-11

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.util.ParameterizedTypeImpl

---Compilation---
Compiled 'com/alibaba/fastjson/util/ParameterizedTypeImpl_0_Test.java'
Compiled 'com/alibaba/fastjson/util/ParameterizedTypeImpl_1_Test.java'
Compiled 'com/alibaba/fastjson/util/ParameterizedTypeImpl_2_Test.java'
Compiled 'com/alibaba/fastjson/util/ParameterizedTypeImpl_3_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.5
Line coverage = 0.3888888888888889
Branch coverage = 0.0
Complexity coverage = 0.16666666666666666

=== Run PIT ===
Executing Mutation Analysis using 25 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.util.ParameterizedTypeImpl, method=getRawType, methodDesc=()Ljava/lang/reflect/Type;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ParameterizedTypeImpl.java, block=3, lineNumber=28, description=mutated return of Object value for com/alibaba/fastjson/util/ParameterizedTypeImpl::getRawType to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.alibaba.fastjson.util.ParameterizedTypeImpl, method=getOwnerType, methodDesc=()Ljava/lang/reflect/Type;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=ParameterizedTypeImpl.java, block=2, lineNumber=24, description=mutated return of Object value for com/alibaba/fastjson/util/ParameterizedTypeImpl::getOwnerType to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 122

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-11
	Class Under Test: com.alibaba.fastjson.util.ParameterizedTypeImpl
	Run number: 1
	Tool preparation time (ms): 37127
	Tool test cases generation time (ms): 61229
	Test cases execution time (ms): 35
	Test case number: 4
	Uncompilable Test Classes: 0
	Broken tests number: 2
	Failing tests number: 0
	Lines total: 18
	Lines covered: 7
	Lines coverage ratio (%): 38.88889
	Conditions total: 24
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 25
	Mutants covered: 2
	Mutants coverage ratio (%): 8.0
	Mutants killed: 2
	Mutants killed ratio (%): 8.0
	Mutants alive: 23
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-11_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-11_1 has finished
=========================================
Folder results_hybrid_60/FASTJSON-49_1 was found
FolderName=FASTJSON-49_1
SUT_ID=FASTJSON-49
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//FASTJSON-49_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid FASTJSON-49 . 1 60 --only-compute-metrics results_hybrid_60//FASTJSON-49_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  FASTJSON-49

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.alibaba.fastjson.serializer.MapSerializer

---Compilation---
Failed to compile 'com/alibaba/fastjson/serializer/MapSerializer_1_Test.java'!
Compiled 'com/alibaba/fastjson/serializer/MapSerializer_2_Test.java'
Compiled 'com/alibaba/fastjson/serializer/MapSerializer_3_Test.java'
Compiled 'com/alibaba/fastjson/serializer/MapSerializer_8_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.75
Line coverage = 0.03496503496503497
Branch coverage = 0.006097560975609756
Complexity coverage = 0.03488372093023256

=== Run PIT ===
Executing Mutation Analysis using 112 mutants 
Time for mutation analysis = 249

>>> RESULTS:
	Tool name: hybrid
	Benchmark: FASTJSON-49
	Class Under Test: com.alibaba.fastjson.serializer.MapSerializer
	Run number: 1
	Tool preparation time (ms): 37980
	Tool test cases generation time (ms): 56784
	Test cases execution time (ms): 138
	Test case number: 4
	Uncompilable Test Classes: 1
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 143
	Lines covered: 5
	Lines coverage ratio (%): 3.4965034
	Conditions total: 164
	Conditions covered: 1
	Conditions coverage ratio (%): 0.60975605
	Mutants total: 112
	Mutants covered: 1
	Mutants coverage ratio (%): 0.8928572
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 112
Copying transcript file transcript.csv to folder results_hybrid_60/FASTJSON-49_1
Moving working folders and log files
Processing of folder results_hybrid_60/FASTJSON-49_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-199_1 was found
FolderName=GUAVA-199_1
SUT_ID=GUAVA-199
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-199_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-199 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-199_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-199

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.util.concurrent.Striped

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-199
	Class Under Test: com.google.common.util.concurrent.Striped
	Run number: 1
	Tool preparation time (ms): 30514
	Tool test cases generation time (ms): 2243
	Test cases execution time (ms): 9
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 30
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 10
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-199_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-199_1 has finished
=========================================
Folder results_hybrid_60/SPOON-142_1 was found
FolderName=SPOON-142_1
SUT_ID=SPOON-142
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-142_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-142 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-142_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-142

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.support.visitor.equals.EqualsChecker

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 3

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-142
	Class Under Test: spoon.support.visitor.equals.EqualsChecker
	Run number: 1
	Tool preparation time (ms): 132755
	Tool test cases generation time (ms): 61096
	Test cases execution time (ms): 15
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 137
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 92
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-142_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-142_1 has finished
=========================================
Folder results_hybrid_60/WEKA-631_1 was found
FolderName=WEKA-631_1
SUT_ID=WEKA-631
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-631_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-631 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-631_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-631

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.beans.FlowByExpressionCustomizer

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 1

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-631
	Class Under Test: weka.gui.beans.FlowByExpressionCustomizer
	Run number: 1
	Tool preparation time (ms): 58506
	Tool test cases generation time (ms): 61361
	Test cases execution time (ms): 5
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 210
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 42
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-631_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-631_1 has finished
=========================================
Folder results_hybrid_60/SPOON-46_1 was found
FolderName=SPOON-46_1
SUT_ID=SPOON-46
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-46_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-46 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-46_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-46

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.support.comparator.QualifiedNameComparator

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-46
	Class Under Test: spoon.support.comparator.QualifiedNameComparator
	Run number: 1
	Tool preparation time (ms): 130986
	Tool test cases generation time (ms): 61242
	Test cases execution time (ms): 15
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 13
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 16
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-46_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-46_1 has finished
=========================================
Folder results_hybrid_60/SPOON-157_1 was found
FolderName=SPOON-157_1
SUT_ID=SPOON-157
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-157_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-157 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-157_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-157

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.support.visitor.equals.EqualsVisitor

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 20

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-157
	Class Under Test: spoon.support.visitor.equals.EqualsVisitor
	Run number: 1
	Tool preparation time (ms): 131894
	Tool test cases generation time (ms): 61105
	Test cases execution time (ms): 17
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 61
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 26
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-157_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-157_1 has finished
=========================================
Folder results_hybrid_60/WEKA-563_1 was found
FolderName=WEKA-563_1
SUT_ID=WEKA-563
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-563_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-563 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-563_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-563

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.associations.FPGrowth

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-563
	Class Under Test: weka.associations.FPGrowth
	Run number: 1
	Tool preparation time (ms): 58705
	Tool test cases generation time (ms): 2246
	Test cases execution time (ms): 5
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 545
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 272
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-563_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-563_1 has finished
=========================================
Folder results_hybrid_60/WEKA-7_1 was found
FolderName=WEKA-7_1
SUT_ID=WEKA-7
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-7_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-7 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-7_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-7

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.beans.ClustererPerformanceEvaluator

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-7
	Class Under Test: weka.gui.beans.ClustererPerformanceEvaluator
	Run number: 1
	Tool preparation time (ms): 60018
	Tool test cases generation time (ms): 61281
	Test cases execution time (ms): 5
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 64
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 30
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-7_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-7_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-192_1 was found
FolderName=GUAVA-192_1
SUT_ID=GUAVA-192
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-192_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-192 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-192_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-192

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.reflect.TypeToken

---Compilation---
Compiled 'com/google/common/reflect/TypeToken_3_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.034482758620689655
Line coverage = 0.014705882352941176
Branch coverage = 0.0
Complexity coverage = 0.014814814814814815

=== Run PIT ===
Executing Mutation Analysis using 196 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.reflect.TypeToken, method=of, methodDesc=(Ljava/lang/Class;)Lcom/google/common/reflect/TypeToken;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=TypeToken.java, block=7, lineNumber=169, description=mutated return of Object value for com/google/common/reflect/TypeToken::of to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 495

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-192
	Class Under Test: com.google.common.reflect.TypeToken
	Run number: 1
	Tool preparation time (ms): 30893
	Tool test cases generation time (ms): 61949
	Test cases execution time (ms): 60
	Test case number: 1
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 272
	Lines covered: 4
	Lines coverage ratio (%): 1.4705882
	Conditions total: 154
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 196
	Mutants covered: 1
	Mutants coverage ratio (%): 0.5102041
	Mutants killed: 1
	Mutants killed ratio (%): 0.5102041
	Mutants alive: 195
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-192_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-192_1 has finished
=========================================
Folder results_hybrid_60/WEKA-577_1 was found
FolderName=WEKA-577_1
SUT_ID=WEKA-577
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-577_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-577 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-577_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-577

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.clusterers.SimpleKMeans

---Compilation---
Compiled 'weka/clusterers/SimpleKMeans_11_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_12_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_19_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_23_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_24_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_25_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_26_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_28_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_29_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_37_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_41_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_44_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_45_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_50_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_51_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_53_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_57_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_58_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_59_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_60_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_63_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_68_Test.java'
Compiled 'weka/clusterers/SimpleKMeans_69_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.33783783783783783
Line coverage = 0.11518987341772152
Branch coverage = 0.013812154696132596
Complexity coverage = 0.09765625

=== Run PIT ===
Executing Mutation Analysis using 182 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[52], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=173, lineNumber=1196, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=getCanopyPeriodicPruningRate, methodDesc=()I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SimpleKMeans.java, block=188, lineNumber=1383, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[17], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=173, lineNumber=1183, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=getCanopyT2, methodDesc=()D], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=SimpleKMeans.java, block=197, lineNumber=1486, description=replaced return of double value with -(x + 1) for weka/clusterers/SimpleKMeans::getCanopyT2, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[126], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=173, lineNumber=1232, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[91], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=173, lineNumber=1220, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=canopyInit, methodDesc=(Lweka/core/Instances;)V], indexes=[70], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=93, lineNumber=865, description=removed call to weka/clusterers/Canopy::setDebug, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[183], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=173, lineNumber=1250, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=getTechnicalInformation, methodDesc=()Lweka/core/TechnicalInformation;], indexes=[31], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=3, lineNumber=393, description=removed call to weka/core/TechnicalInformation::setValue, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=getTechnicalInformation, methodDesc=()Lweka/core/TechnicalInformation;], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=3, lineNumber=388, description=removed call to weka/core/TechnicalInformation::setValue, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=setNumClusters, methodDesc=(I)V], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=SimpleKMeans.java, block=175, lineNumber=1277, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=canopyInit, methodDesc=(Lweka/core/Instances;)V], indexes=[49], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=93, lineNumber=862, description=removed call to weka/clusterers/Canopy::setMaxNumCandidateCanopiesToHoldInMemory, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.SimpleKMeans, method=canopyInit, methodDesc=(Lweka/core/Instances;)V], indexes=[26], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=SimpleKMeans.java, block=93, lineNumber=858, description=removed call to weka/clusterers/Canopy::setSeed, testsInOrder=[]]
Time for mutation analysis = 768

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-577
	Class Under Test: weka.clusterers.SimpleKMeans
	Run number: 1
	Tool preparation time (ms): 59980
	Tool test cases generation time (ms): 61832
	Test cases execution time (ms): 156
	Test case number: 23
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 790
	Lines covered: 91
	Lines coverage ratio (%): 11.518988
	Conditions total: 362
	Conditions covered: 5
	Conditions coverage ratio (%): 1.3812155
	Mutants total: 182
	Mutants covered: 13
	Mutants coverage ratio (%): 7.1428576
	Mutants killed: 13
	Mutants killed ratio (%): 7.1428576
	Mutants alive: 169
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-577_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-577_1 has finished
=========================================
Folder results_hybrid_60/SPOON-77_1 was found
FolderName=SPOON-77_1
SUT_ID=SPOON-77
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-77_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-77 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-77_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-77

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.javadoc.internal.JavadocInlineTag

---Compilation---
Compiled 'spoon/javadoc/internal/JavadocInlineTag_0_Test.java'
Compiled 'spoon/javadoc/internal/JavadocInlineTag_5_Test.java'
Compiled 'spoon/javadoc/internal/JavadocInlineTag_7_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.2727272727272727
Line coverage = 0.21951219512195122
Branch coverage = 0.03125
Complexity coverage = 0.1111111111111111

=== Run PIT ===
Executing Mutation Analysis using 36 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.javadoc.internal.JavadocInlineTag, method=fromText, methodDesc=(Ljava/lang/String;)Lspoon/javadoc/internal/JavadocDescriptionElement;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=JavadocInlineTag.java, block=4, lineNumber=30, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=spoon.javadoc.internal.JavadocInlineTag, method=getType, methodDesc=()Lspoon/javadoc/internal/JavadocInlineTag$Type;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=JavadocInlineTag.java, block=11, lineNumber=91, description=mutated return of Object value for spoon/javadoc/internal/JavadocInlineTag::getType to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 150

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-77
	Class Under Test: spoon.javadoc.internal.JavadocInlineTag
	Run number: 1
	Tool preparation time (ms): 132297
	Tool test cases generation time (ms): 61288
	Test cases execution time (ms): 41
	Test case number: 3
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 41
	Lines covered: 9
	Lines coverage ratio (%): 21.95122
	Conditions total: 32
	Conditions covered: 1
	Conditions coverage ratio (%): 3.125
	Mutants total: 36
	Mutants covered: 2
	Mutants coverage ratio (%): 5.555556
	Mutants killed: 2
	Mutants killed ratio (%): 5.555556
	Mutants alive: 34
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-77_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-77_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-134_1 was found
FolderName=GUAVA-134_1
SUT_ID=GUAVA-134
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-134_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-134 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-134_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-134

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.collect.Ordering

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-134
	Class Under Test: com.google.common.collect.Ordering
	Run number: 1
	Tool preparation time (ms): 30310
	Tool test cases generation time (ms): 4086
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 87
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 40
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-134_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-134_1 has finished
=========================================
Folder results_hybrid_60/WEKA-303_1 was found
FolderName=WEKA-303_1
SUT_ID=WEKA-303
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-303_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-303 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-303_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-303

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.classifiers.rules.RuleStats

---Compilation---
Compiled 'weka/classifiers/rules/RuleStats_23_Test.java'
Compiled 'weka/classifiers/rules/RuleStats_29_Test.java'
Compiled 'weka/classifiers/rules/RuleStats_30_Test.java'
Compiled 'weka/classifiers/rules/RuleStats_7_Test.java'

---Timing Information---
Error : java.io.IOException: keyword @relation expected, read Token[r], line 1

---The tests are re-executed other four times to find the flaky ones---
Error : java.io.IOException: keyword @relation expected, read Token[r], line 1
Error : java.io.IOException: keyword @relation expected, read Token[r], line 1
Error : java.io.IOException: keyword @relation expected, read Token[r], line 1
Error : java.io.IOException: keyword @relation expected, read Token[r], line 1

=== Run Jacoco for Coverage ===
Error : java.io.IOException: keyword @relation expected, read Token[r], line 1
Method coverage = 0.12121212121212122
Line coverage = 0.05351170568561873
Branch coverage = 0.0
Complexity coverage = 0.038461538461538464

=== Run PIT ===
Executing Mutation Analysis using 126 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.rules.RuleStats, method=minDataDLIfExists, methodDesc=(IDZ)D], indexes=[16], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=RuleStats.java, block=96, lineNumber=635, description=changed conditional boundary, testsInOrder=[]]
Time for mutation analysis = 303

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-303
	Class Under Test: weka.classifiers.rules.RuleStats
	Run number: 1
	Tool preparation time (ms): 58636
	Tool test cases generation time (ms): 20588
	Test cases execution time (ms): 74
	Test case number: 4
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 299
	Lines covered: 16
	Lines coverage ratio (%): 5.3511705
	Conditions total: 142
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 126
	Mutants covered: 1
	Mutants coverage ratio (%): 0.79365087
	Mutants killed: 1
	Mutants killed ratio (%): 0.79365087
	Mutants alive: 125
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-303_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-303_1 has finished
=========================================
Folder results_hybrid_60/OKIO-10_1 was found
FolderName=OKIO-10_1
SUT_ID=OKIO-10
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//OKIO-10_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid OKIO-10 . 1 60 --only-compute-metrics results_hybrid_60//OKIO-10_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  OKIO-10

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: okio.Utf8

---Compilation---
Compiled 'okio/Utf8_0_Test.java'
Compiled 'okio/Utf8_1_Test.java'
Compiled 'okio/Utf8_2_Test.java'
Compiled 'okio/Utf8_4_Test.java'
Compiled 'okio/Utf8_5_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 1.0
Line coverage = 0.4642857142857143
Branch coverage = 0.34615384615384615
Complexity coverage = 0.3333333333333333

=== Run PIT ===
Executing Mutation Analysis using 39 mutants 
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[103], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Utf8.java, block=11, lineNumber=96, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[112], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=Utf8.java, block=12, lineNumber=99, description=Changed increment from 1 to -1, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Utf8.java, block=2, lineNumber=82, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[103], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Utf8.java, block=11, lineNumber=96, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Utf8.java, block=4, lineNumber=83, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[32], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Utf8.java, block=6, lineNumber=84, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[108], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Utf8.java, block=12, lineNumber=98, description=Replaced long addition with subtraction, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Utf8.java, block=4, lineNumber=83, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[92], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Utf8.java, block=10, lineNumber=93, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[92], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Utf8.java, block=10, lineNumber=93, description=negated conditional, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[210], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Utf8.java, block=25, lineNumber=126, description=replaced return of long value with value + 1 for okio/Utf8::size, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;)J], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Utf8.java, block=1, lineNumber=74, description=replaced return of long value with value + 1 for okio/Utf8::size, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[57], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Utf8.java, block=8, lineNumber=87, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[32], mutator=org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator], filename=Utf8.java, block=6, lineNumber=84, description=changed conditional boundary, testsInOrder=[]]
mutationResult.getState() SURVIVED
* Alived mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=okio.Utf8, method=size, methodDesc=(Ljava/lang/String;II)J], indexes=[57], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Utf8.java, block=8, lineNumber=87, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 200

>>> RESULTS:
	Tool name: hybrid
	Benchmark: OKIO-10
	Class Under Test: okio.Utf8
	Run number: 1
	Tool preparation time (ms): 20602
	Tool test cases generation time (ms): 61248
	Test cases execution time (ms): 35
	Test case number: 5
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 28
	Lines covered: 13
	Lines coverage ratio (%): 46.42857
	Conditions total: 26
	Conditions covered: 9
	Conditions coverage ratio (%): 34.615387
	Mutants total: 39
	Mutants covered: 15
	Mutants coverage ratio (%): 38.46154
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 39
Copying transcript file transcript.csv to folder results_hybrid_60/OKIO-10_1
Moving working folders and log files
Processing of folder results_hybrid_60/OKIO-10_1 has finished
=========================================
Folder results_hybrid_60/WEKA-1088_1 was found
FolderName=WEKA-1088_1
SUT_ID=WEKA-1088
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-1088_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-1088 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-1088_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-1088

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.beans.Associator

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 1

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-1088
	Class Under Test: weka.gui.beans.Associator
	Run number: 1
	Tool preparation time (ms): 59503
	Tool test cases generation time (ms): 61209
	Test cases execution time (ms): 6
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 204
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 104
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-1088_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-1088_1 has finished
=========================================
Folder results_hybrid_60/SPOON-135_1 was found
FolderName=SPOON-135_1
SUT_ID=SPOON-135
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-135_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-135 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-135_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-135

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.support.JavaOutputProcessor

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 106

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-135
	Class Under Test: spoon.support.JavaOutputProcessor
	Run number: 1
	Tool preparation time (ms): 131836
	Tool test cases generation time (ms): 61080
	Test cases execution time (ms): 15
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 83
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 46
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-135_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-135_1 has finished
=========================================
Folder results_hybrid_60/WEKA-143_1 was found
FolderName=WEKA-143_1
SUT_ID=WEKA-143
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-143_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-143 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-143_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-143

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.knowledgeflow.FlowRunner

---Compilation---
Compiled 'weka/knowledgeflow/FlowRunner_31_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.06060606060606061
Line coverage = 0.03669724770642202
Branch coverage = 0.0
Complexity coverage = 0.03125

=== Run PIT ===
Executing Mutation Analysis using 100 mutants 
Time for mutation analysis = 246

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-143
	Class Under Test: weka.knowledgeflow.FlowRunner
	Run number: 1
	Tool preparation time (ms): 59622
	Tool test cases generation time (ms): 61306
	Test cases execution time (ms): 43
	Test case number: 1
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 218
	Lines covered: 8
	Lines coverage ratio (%): 3.6697247
	Conditions total: 62
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 100
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 100
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-143_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-143_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-148_1 was found
FolderName=GUAVA-148_1
SUT_ID=GUAVA-148
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-148_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-148 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-148_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-148

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.base.Stopwatch

---Compilation---
Compiled 'com/google/common/base/Stopwatch_0_Test.java'
Compiled 'com/google/common/base/Stopwatch_10_Test.java'
Compiled 'com/google/common/base/Stopwatch_12_Test.java'
Compiled 'com/google/common/base/Stopwatch_1_Test.java'
Compiled 'com/google/common/base/Stopwatch_2_Test.java'
Compiled 'com/google/common/base/Stopwatch_3_Test.java'
Compiled 'com/google/common/base/Stopwatch_4_Test.java'
Compiled 'com/google/common/base/Stopwatch_5_Test.java'
Compiled 'com/google/common/base/Stopwatch_7_Test.java'
Compiled 'com/google/common/base/Stopwatch_8_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.75
Line coverage = 0.40384615384615385
Branch coverage = 0.125
Complexity coverage = 0.41935483870967744

=== Run PIT ===
Executing Mutation Analysis using 47 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=elapsedNanos, methodDesc=()J], indexes=[22], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Stopwatch.java, block=14, lineNumber=193, description=replaced return of long value with value + 1 for com/google/common/base/Stopwatch::elapsedNanos, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=createStarted, methodDesc=()Lcom/google/common/base/Stopwatch;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Stopwatch.java, block=2, lineNumber=122, description=mutated return of Object value for com/google/common/base/Stopwatch::createStarted to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=createStarted, methodDesc=(Lcom/google/common/base/Ticker;)Lcom/google/common/base/Stopwatch;], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Stopwatch.java, block=3, lineNumber=131, description=mutated return of Object value for com/google/common/base/Stopwatch::createStarted to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=createUnstarted, methodDesc=()Lcom/google/common/base/Stopwatch;], indexes=[6], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Stopwatch.java, block=0, lineNumber=104, description=mutated return of Object value for com/google/common/base/Stopwatch::createUnstarted to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=createUnstarted, methodDesc=(Lcom/google/common/base/Ticker;)Lcom/google/common/base/Stopwatch;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Stopwatch.java, block=1, lineNumber=113, description=mutated return of Object value for com/google/common/base/Stopwatch::createUnstarted to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=start, methodDesc=()Lcom/google/common/base/Stopwatch;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=Stopwatch.java, block=9, lineNumber=158, description=removed call to com/google/common/base/Preconditions::checkState, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=isRunning, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Stopwatch.java, block=6, lineNumber=147, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=start, methodDesc=()Lcom/google/common/base/Stopwatch;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Stopwatch.java, block=9, lineNumber=161, description=mutated return of Object value for com/google/common/base/Stopwatch::start to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=elapsed, methodDesc=(Ljava/util/concurrent/TimeUnit;)J], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Stopwatch.java, block=15, lineNumber=210, description=replaced return of long value with value + 1 for com/google/common/base/Stopwatch::elapsed, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=start, methodDesc=()Lcom/google/common/base/Stopwatch;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Stopwatch.java, block=7, lineNumber=158, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=elapsedNanos, methodDesc=()J], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Stopwatch.java, block=13, lineNumber=193, description=Replaced long addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=elapsedNanos, methodDesc=()J], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Stopwatch.java, block=12, lineNumber=193, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=reset, methodDesc=()Lcom/google/common/base/Stopwatch;], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Stopwatch.java, block=11, lineNumber=189, description=mutated return of Object value for com/google/common/base/Stopwatch::reset to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.base.Stopwatch, method=elapsedNanos, methodDesc=()J], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=Stopwatch.java, block=13, lineNumber=193, description=Replaced long subtraction with addition, testsInOrder=[]]
Time for mutation analysis = 248

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-148
	Class Under Test: com.google.common.base.Stopwatch
	Run number: 1
	Tool preparation time (ms): 29056
	Tool test cases generation time (ms): 61581
	Test cases execution time (ms): 61
	Test case number: 10
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 52
	Lines covered: 21
	Lines coverage ratio (%): 40.384613
	Conditions total: 24
	Conditions covered: 3
	Conditions coverage ratio (%): 12.5
	Mutants total: 47
	Mutants covered: 14
	Mutants coverage ratio (%): 29.787233
	Mutants killed: 14
	Mutants killed ratio (%): 29.787233
	Mutants alive: 33
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-148_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-148_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-61_1 was found
FolderName=GUAVA-61_1
SUT_ID=GUAVA-61
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-61_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-61 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-61_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-61

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.base.CharMatcher

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-61
	Class Under Test: com.google.common.base.CharMatcher
	Run number: 1
	Tool preparation time (ms): 30272
	Tool test cases generation time (ms): 3088
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 178
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 110
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-61_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-61_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-46_1 was found
FolderName=GUAVA-46_1
SUT_ID=GUAVA-46
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-46_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-46 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-46_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-46

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.collect.MinMaxPriorityQueue

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-46
	Class Under Test: com.google.common.collect.MinMaxPriorityQueue
	Run number: 1
	Tool preparation time (ms): 29517
	Tool test cases generation time (ms): 61078
	Test cases execution time (ms): 8
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 106
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 53
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-46_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-46_1 has finished
=========================================
Folder results_hybrid_60/WEKA-1127_1 was found
FolderName=WEKA-1127_1
SUT_ID=WEKA-1127
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-1127_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-1127 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-1127_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-1127

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.clusterers.EM

---Compilation---
Compiled 'weka/clusterers/EM_17_Test.java'
Compiled 'weka/clusterers/EM_19_Test.java'
Compiled 'weka/clusterers/EM_21_Test.java'
Compiled 'weka/clusterers/EM_2_Test.java'
Compiled 'weka/clusterers/EM_33_Test.java'
Compiled 'weka/clusterers/EM_44_Test.java'
Compiled 'weka/clusterers/EM_45_Test.java'
Compiled 'weka/clusterers/EM_47_Test.java'
Compiled 'weka/clusterers/EM_48_Test.java'
Compiled 'weka/clusterers/EM_51_Test.java'
Compiled 'weka/clusterers/EM_52_Test.java'
Compiled 'weka/clusterers/EM_5_Test.java'
Compiled 'weka/clusterers/EM_6_Test.java'
Compiled 'weka/clusterers/EM_8_Test.java'
Compiled 'weka/clusterers/EM_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.3088235294117647
Line coverage = 0.1006006006006006
Branch coverage = 0.013157894736842105
Complexity coverage = 0.09545454545454546

=== Run PIT ===
Executing Mutation Analysis using 175 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.EM, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[214], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=EM.java, block=53, lineNumber=831, description=mutated return of Object value for weka/clusterers/EM::getOptions to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.EM, method=launchMSteps, methodDesc=(Lweka/core/Instances;)V], indexes=[12], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=EM.java, block=276, lineNumber=1867, description=Replaced integer multiplication with division, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.EM, method=getMinLogLikelihoodImprovementIterating, methodDesc=()D], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=EM.java, block=23, lineNumber=558, description=replaced return of double value with -(x + 1) for weka/clusterers/EM::getMinLogLikelihoodImprovementIterating, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.EM, method=<init>, methodDesc=()V], indexes=[53], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=EM.java, block=121, lineNumber=1205, description=removed call to weka/clusterers/EM::resetOptions, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.EM, method=M, methodDesc=(Lweka/core/Instances;)V], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=EM.java, block=106, lineNumber=1137, description=removed call to weka/clusterers/EM::new_estimators, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.EM, method=getMaximumNumberOfClusters, methodDesc=()I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=EM.java, block=42, lineNumber=717, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.EM, method=getNumKMeansRuns, methodDesc=()I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=EM.java, block=13, lineNumber=452, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.EM, method=getMinStdDev, methodDesc=()D], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=EM.java, block=33, lineNumber=656, description=replaced return of double value with -(x + 1) for weka/clusterers/EM::getMinStdDev, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.clusterers.EM, method=estimate_priors, methodDesc=(Lweka/core/Instances;)V], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=EM.java, block=75, lineNumber=925, description=Changed increment from 1 to -1, testsInOrder=[]]
Time for mutation analysis = 612

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-1127
	Class Under Test: weka.clusterers.EM
	Run number: 1
	Tool preparation time (ms): 58730
	Tool test cases generation time (ms): 61080
	Test cases execution time (ms): 120
	Test case number: 15
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 666
	Lines covered: 67
	Lines coverage ratio (%): 10.0600605
	Conditions total: 304
	Conditions covered: 4
	Conditions coverage ratio (%): 1.3157895
	Mutants total: 166
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 166
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-1127_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-1127_1 has finished
=========================================
Folder results_hybrid_60/WEKA-302_1 was found
FolderName=WEKA-302_1
SUT_ID=WEKA-302
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-302_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-302 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-302_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-302

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.gui.LogWindow

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-302
	Class Under Test: weka.gui.LogWindow
	Run number: 1
	Tool preparation time (ms): 60660
	Tool test cases generation time (ms): 61270
	Test cases execution time (ms): 5
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 130
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 20
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-302_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-302_1 has finished
=========================================
Folder results_hybrid_60/WEKA-79_1 was found
FolderName=WEKA-79_1
SUT_ID=WEKA-79
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-79_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-79 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-79_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-79

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.core.OptionHandlerJavadoc

---Compilation---
Compiled 'weka/core/OptionHandlerJavadoc_0_Test.java'
Compiled 'weka/core/OptionHandlerJavadoc_16_Test.java'
Compiled 'weka/core/OptionHandlerJavadoc_1_Test.java'
Compiled 'weka/core/OptionHandlerJavadoc_2_Test.java'
Compiled 'weka/core/OptionHandlerJavadoc_3_Test.java'
Compiled 'weka/core/OptionHandlerJavadoc_4_Test.java'
Compiled 'weka/core/OptionHandlerJavadoc_5_Test.java'
Compiled 'weka/core/OptionHandlerJavadoc_6_Test.java'
Compiled 'weka/core/OptionHandlerJavadoc_7_Test.java'
Compiled 'weka/core/OptionHandlerJavadoc_8_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 1.0
Line coverage = 0.5625
Branch coverage = 0.16666666666666666
Complexity coverage = 0.5

=== Run PIT ===
Executing Mutation Analysis using 20 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=setOptions, methodDesc=([Ljava/lang/String;)V], indexes=[12], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=OptionHandlerJavadoc.java, block=2, lineNumber=120, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=getProlog, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=OptionHandlerJavadoc.java, block=8, lineNumber=156, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=main, methodDesc=([Ljava/lang/String;)V], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=OptionHandlerJavadoc.java, block=22, lineNumber=231, description=removed call to weka/core/OptionHandlerJavadoc::runJavadoc, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=generateJavadoc, methodDesc=(I)Ljava/lang/String;], indexes=[160], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=OptionHandlerJavadoc.java, block=20, lineNumber=212, description=mutated return of Object value for weka/core/OptionHandlerJavadoc::generateJavadoc to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=getRevision, methodDesc=()Ljava/lang/String;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=OptionHandlerJavadoc.java, block=21, lineNumber=222, description=mutated return of Object value for weka/core/OptionHandlerJavadoc::getRevision to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=generateJavadoc, methodDesc=(I)Ljava/lang/String;], indexes=[8], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=OptionHandlerJavadoc.java, block=9, lineNumber=174, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[25], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=OptionHandlerJavadoc.java, block=1, lineNumber=103, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=OptionHandlerJavadoc.java, block=1, lineNumber=107, description=mutated return of Object value for weka/core/OptionHandlerJavadoc::listOptions to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=setOptions, methodDesc=([Ljava/lang/String;)V], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=OptionHandlerJavadoc.java, block=2, lineNumber=118, description=removed call to weka/core/Javadoc::setOptions, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[34], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=OptionHandlerJavadoc.java, block=6, lineNumber=138, description=mutated return of Object value for weka/core/OptionHandlerJavadoc::getOptions to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=setOptions, methodDesc=([Ljava/lang/String;)V], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=OptionHandlerJavadoc.java, block=4, lineNumber=120, description=removed call to weka/core/OptionHandlerJavadoc::setProlog, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.core.OptionHandlerJavadoc, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=OptionHandlerJavadoc.java, block=5, lineNumber=134, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 171

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-79
	Class Under Test: weka.core.OptionHandlerJavadoc
	Run number: 1
	Tool preparation time (ms): 59502
	Tool test cases generation time (ms): 61979
	Test cases execution time (ms): 63
	Test case number: 10
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 48
	Lines covered: 27
	Lines coverage ratio (%): 56.25
	Conditions total: 18
	Conditions covered: 3
	Conditions coverage ratio (%): 16.666668
	Mutants total: 20
	Mutants covered: 12
	Mutants coverage ratio (%): 60.000004
	Mutants killed: 12
	Mutants killed ratio (%): 60.000004
	Mutants alive: 8
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-79_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-79_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-96_1 was found
FolderName=GUAVA-96_1
SUT_ID=GUAVA-96
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-96_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-96 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-96_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-96

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.io.MoreFiles

---Compilation---
Compiled 'com/google/common/io/MoreFiles_0_Test.java'
Compiled 'com/google/common/io/MoreFiles_10_Test.java'
Compiled 'com/google/common/io/MoreFiles_11_Test.java'
Compiled 'com/google/common/io/MoreFiles_12_Test.java'
Compiled 'com/google/common/io/MoreFiles_13_Test.java'
Compiled 'com/google/common/io/MoreFiles_5_Test.java'
Compiled 'com/google/common/io/MoreFiles_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.25925925925925924
Line coverage = 0.12179487179487179
Branch coverage = 0.07575757575757576
Complexity coverage = 0.11666666666666667

=== Run PIT ===
Executing Mutation Analysis using 74 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=equal, methodDesc=(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z], indexes=[20], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MoreFiles.java, block=26, lineNumber=372, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=getNameWithoutExtension, methodDesc=(Ljava/nio/file/Path;)Ljava/lang/String;], indexes=[41], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MoreFiles.java, block=50, lineNumber=490, description=mutated return of Object value for com/google/common/io/MoreFiles::getNameWithoutExtension to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=getNameWithoutExtension, methodDesc=(Ljava/nio/file/Path;)Ljava/lang/String;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MoreFiles.java, block=48, lineNumber=490, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=getNameWithoutExtension, methodDesc=(Ljava/nio/file/Path;)Ljava/lang/String;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MoreFiles.java, block=46, lineNumber=484, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=getFileExtension, methodDesc=(Ljava/nio/file/Path;)Ljava/lang/String;], indexes=[38], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=MoreFiles.java, block=45, lineNumber=472, description=Replaced integer addition with subtraction, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=getFileExtension, methodDesc=(Ljava/nio/file/Path;)Ljava/lang/String;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MoreFiles.java, block=41, lineNumber=466, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=getFileExtension, methodDesc=(Ljava/nio/file/Path;)Ljava/lang/String;], indexes=[42], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MoreFiles.java, block=45, lineNumber=472, description=mutated return of Object value for com/google/common/io/MoreFiles::getFileExtension to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=fileTraverser, methodDesc=()Lcom/google/common/graph/Traverser;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MoreFiles.java, block=17, lineNumber=292, description=mutated return of Object value for com/google/common/io/MoreFiles::fileTraverser to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=asByteSource, methodDesc=(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lcom/google/common/io/ByteSource;], indexes=[9], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MoreFiles.java, block=1, lineNumber=84, description=mutated return of Object value for com/google/common/io/MoreFiles::asByteSource to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=equal, methodDesc=(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z], indexes=[16], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MoreFiles.java, block=25, lineNumber=371, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=isDirectory, methodDesc=([Ljava/nio/file/LinkOption;)Lcom/google/common/base/Predicate;], indexes=[13], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=MoreFiles.java, block=22, lineNumber=321, description=mutated return of Object value for com/google/common/io/MoreFiles::isDirectory to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.io.MoreFiles, method=getFileExtension, methodDesc=(Ljava/nio/file/Path;)Ljava/lang/String;], indexes=[30], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=MoreFiles.java, block=43, lineNumber=472, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 297

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-96
	Class Under Test: com.google.common.io.MoreFiles
	Run number: 1
	Tool preparation time (ms): 30783
	Tool test cases generation time (ms): 61757
	Test cases execution time (ms): 77
	Test case number: 7
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 156
	Lines covered: 19
	Lines coverage ratio (%): 12.179487
	Conditions total: 66
	Conditions covered: 5
	Conditions coverage ratio (%): 7.575758
	Mutants total: 74
	Mutants covered: 12
	Mutants coverage ratio (%): 16.216215
	Mutants killed: 12
	Mutants killed ratio (%): 16.216215
	Mutants alive: 62
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-96_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-96_1 has finished
=========================================
Folder results_hybrid_60/SPOON-57_1 was found
FolderName=SPOON-57_1
SUT_ID=SPOON-57
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-57_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-57 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-57_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-57

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.testing.utils.Check

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 111

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-57
	Class Under Test: spoon.testing.utils.Check
	Run number: 1
	Tool preparation time (ms): 134455
	Tool test cases generation time (ms): 61249
	Test cases execution time (ms): 17
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 25
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 16
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-57_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-57_1 has finished
=========================================
Folder results_hybrid_60/SPOON-178_1 was found
FolderName=SPOON-178_1
SUT_ID=SPOON-178
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-178_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-178 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-178_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-178

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.reflect.visitor.PrintingContext

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 165

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-178
	Class Under Test: spoon.reflect.visitor.PrintingContext
	Run number: 1
	Tool preparation time (ms): 130700
	Tool test cases generation time (ms): 61276
	Test cases execution time (ms): 16
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 36
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 24
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-178_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-178_1 has finished
=========================================
Folder results_hybrid_60/GUAVA-71_1 was found
FolderName=GUAVA-71_1
SUT_ID=GUAVA-71
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//GUAVA-71_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid GUAVA-71 . 1 60 --only-compute-metrics results_hybrid_60//GUAVA-71_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  GUAVA-71

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: com.google.common.escape.Escapers

---Compilation---
Compiled 'com/google/common/escape/Escapers_0_Test.java'
Compiled 'com/google/common/escape/Escapers_1_Test.java'
Compiled 'com/google/common/escape/Escapers_2_Test.java'
Compiled 'com/google/common/escape/Escapers_3_Test.java'
Compiled 'com/google/common/escape/Escapers_4_Test.java'
Compiled 'com/google/common/escape/Escapers_6_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.875
Line coverage = 0.7142857142857143
Branch coverage = 0.5
Complexity coverage = 0.6363636363636364

=== Run PIT ===
Executing Mutation Analysis using 11 mutants 
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.escape.Escapers, method=wrap, methodDesc=(Lcom/google/common/escape/CharEscaper;)Lcom/google/common/escape/UnicodeEscaper;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Escapers.java, block=13, lineNumber=224, description=mutated return of Object value for com/google/common/escape/Escapers::wrap to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.escape.Escapers, method=stringOrNull, methodDesc=([C)Ljava/lang/String;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Escapers.java, block=10, lineNumber=219, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.escape.Escapers, method=asUnicodeEscaper, methodDesc=(Lcom/google/common/escape/Escaper;)Lcom/google/common/escape/UnicodeEscaper;], indexes=[27], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Escapers.java, block=6, lineNumber=184, description=mutated return of Object value for com/google/common/escape/Escapers::asUnicodeEscaper to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.escape.Escapers, method=stringOrNull, methodDesc=([C)Ljava/lang/String;], indexes=[15], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Escapers.java, block=12, lineNumber=219, description=mutated return of Object value for com/google/common/escape/Escapers::stringOrNull to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.escape.Escapers, method=asUnicodeEscaper, methodDesc=(Lcom/google/common/escape/Escaper;)Lcom/google/common/escape/UnicodeEscaper;], indexes=[21], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Escapers.java, block=5, lineNumber=183, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.escape.Escapers, method=nullEscaper, methodDesc=()Lcom/google/common/escape/Escaper;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Escapers.java, block=1, lineNumber=42, description=mutated return of Object value for com/google/common/escape/Escapers::nullEscaper to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.escape.Escapers, method=asUnicodeEscaper, methodDesc=(Lcom/google/common/escape/Escaper;)Lcom/google/common/escape/UnicodeEscaper;], indexes=[10], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=Escapers.java, block=3, lineNumber=181, description=negated conditional, testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.escape.Escapers, method=builder, methodDesc=()Lcom/google/common/escape/Escapers$Builder;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Escapers.java, block=2, lineNumber=79, description=mutated return of Object value for com/google/common/escape/Escapers::builder to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() KILLED
* Killed mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=com.google.common.escape.Escapers, method=computeReplacement, methodDesc=(Lcom/google/common/escape/UnicodeEscaper;I)Ljava/lang/String;], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=Escapers.java, block=9, lineNumber=215, description=mutated return of Object value for com/google/common/escape/Escapers::computeReplacement to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
Time for mutation analysis = 143

>>> RESULTS:
	Tool name: hybrid
	Benchmark: GUAVA-71
	Class Under Test: com.google.common.escape.Escapers
	Run number: 1
	Tool preparation time (ms): 30262
	Tool test cases generation time (ms): 61184
	Test cases execution time (ms): 55
	Test case number: 6
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 14
	Lines covered: 10
	Lines coverage ratio (%): 71.42857
	Conditions total: 6
	Conditions covered: 3
	Conditions coverage ratio (%): 50.0
	Mutants total: 11
	Mutants covered: 9
	Mutants coverage ratio (%): 81.818184
	Mutants killed: 9
	Mutants killed ratio (%): 81.818184
	Mutants alive: 2
Copying transcript file transcript.csv to folder results_hybrid_60/GUAVA-71_1
Moving working folders and log files
Processing of folder results_hybrid_60/GUAVA-71_1 has finished
=========================================
Folder results_hybrid_60/WEKA-741_1 was found
FolderName=WEKA-741_1
SUT_ID=WEKA-741
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//WEKA-741_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid WEKA-741 . 1 60 --only-compute-metrics results_hybrid_60//WEKA-741_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  WEKA-741

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: weka.classifiers.bayes.net.search.local.HillClimber

---Compilation---
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_0_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_10_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_11_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_12_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_13_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_14_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_15_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_16_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_17_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_18_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_19_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_1_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_20_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_21_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_22_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_23_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_2_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_3_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_4_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_5_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_6_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_7_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_8_Test.java'
Compiled 'weka/classifiers/bayes/net/search/local/HillClimber_9_Test.java'

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.625
Line coverage = 0.28368794326241137
Branch coverage = 0.0625
Complexity coverage = 0.23076923076923078

=== Run PIT ===
Executing Mutation Analysis using 109 mutants 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
Failed Test execution with JUNIT CORE: 
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=getInitAsNaiveBayes, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=HillClimber.java, block=74, lineNumber=680, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=globalInfo, methodDesc=()Ljava/lang/String;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=HillClimber.java, block=77, lineNumber=708, description=mutated return of Object value for weka/classifiers/bayes/net/search/local/HillClimber::globalInfo to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[11], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=HillClimber.java, block=68, lineNumber=645, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=setOptions, methodDesc=([Ljava/lang/String;)V], indexes=[14], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=HillClimber.java, block=63, lineNumber=621, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=setOptions, methodDesc=([Ljava/lang/String;)V], indexes=[59], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=HillClimber.java, block=67, lineNumber=632, description=removed call to weka/classifiers/bayes/net/search/local/LocalScoreSearchAlgorithm::setOptions, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=getRevision, methodDesc=()Ljava/lang/String;], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=HillClimber.java, block=79, lineNumber=728, description=mutated return of Object value for weka/classifiers/bayes/net/search/local/HillClimber::getRevision to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[29], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=HillClimber.java, block=62, lineNumber=564, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=getUseArcReversal, methodDesc=()Z], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=HillClimber.java, block=75, lineNumber=689, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=setOptions, methodDesc=([Ljava/lang/String;)V], indexes=[7], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=HillClimber.java, block=63, lineNumber=619, description=removed call to weka/classifiers/bayes/net/search/local/HillClimber::setUseArcReversal, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[35], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=HillClimber.java, block=70, lineNumber=652, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[40], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=HillClimber.java, block=62, lineNumber=566, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=setOptions, methodDesc=([Ljava/lang/String;)V], indexes=[40], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=HillClimber.java, block=65, lineNumber=626, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[40], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=HillClimber.java, block=71, lineNumber=652, description=negated conditional, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[89], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=HillClimber.java, block=72, lineNumber=662, description=mutated return of Object value for weka/classifiers/bayes/net/search/local/HillClimber::getOptions to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=getMaxNrOfParents, methodDesc=()I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=HillClimber.java, block=61, lineNumber=550, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[64], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=HillClimber.java, block=62, lineNumber=573, description=mutated return of Object value for weka/classifiers/bayes/net/search/local/HillClimber::listOptions to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[51], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=HillClimber.java, block=62, lineNumber=568, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=setOptions, methodDesc=([Ljava/lang/String;)V], indexes=[22], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=HillClimber.java, block=65, lineNumber=621, description=removed call to weka/classifiers/bayes/net/search/local/HillClimber::setInitAsNaiveBayes, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=setOptions, methodDesc=([Ljava/lang/String;)V], indexes=[53], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=HillClimber.java, block=67, lineNumber=629, description=removed call to weka/classifiers/bayes/net/search/local/HillClimber::setMaxNrOfParents, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=listOptions, methodDesc=()Ljava/util/Enumeration;], indexes=[18], mutator=org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator], filename=HillClimber.java, block=62, lineNumber=562, description=removed call to java/util/Vector::addElement, testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=isNotTabu, methodDesc=(Lweka/classifiers/bayes/net/search/local/HillClimber$Operation;)Z], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=HillClimber.java, block=15, lineNumber=299, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=useArcReversalTipText, methodDesc=()Ljava/lang/String;], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=HillClimber.java, block=78, lineNumber=718, description=mutated return of Object value for weka/classifiers/bayes/net/search/local/HillClimber::useArcReversalTipText to ( if (x != null) null else throw new RuntimeException ), testsInOrder=[]]
mutationResult.getState() IGNORED
* Ignored mutant MutationDetails [id=MutationIdentifier [location=Location [clazz=weka.classifiers.bayes.net.search.local.HillClimber, method=getOptions, methodDesc=()[Ljava/lang/String;], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator], filename=HillClimber.java, block=69, lineNumber=649, description=negated conditional, testsInOrder=[]]
Time for mutation analysis = 344

>>> RESULTS:
	Tool name: hybrid
	Benchmark: WEKA-741
	Class Under Test: weka.classifiers.bayes.net.search.local.HillClimber
	Run number: 1
	Tool preparation time (ms): 59733
	Tool test cases generation time (ms): 62108
	Test cases execution time (ms): 164
	Test case number: 24
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 141
	Lines covered: 40
	Lines coverage ratio (%): 28.368795
	Conditions total: 80
	Conditions covered: 5
	Conditions coverage ratio (%): 6.25
	Mutants total: 86
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 86
Copying transcript file transcript.csv to folder results_hybrid_60/WEKA-741_1
Moving working folders and log files
Processing of folder results_hybrid_60/WEKA-741_1 has finished
=========================================
Folder results_hybrid_60/SPOON-62_1 was found
FolderName=SPOON-62_1
SUT_ID=SPOON-62
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SPOON-62_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SPOON-62 . 1 60 --only-compute-metrics results_hybrid_60//SPOON-62_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SPOON-62

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: spoon.support.comparator.DeepRepresentationComparator

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 2

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SPOON-62
	Class Under Test: spoon.support.comparator.DeepRepresentationComparator
	Run number: 1
	Tool preparation time (ms): 132866
	Tool test cases generation time (ms): 61080
	Test cases execution time (ms): 14
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 11
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 8
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SPOON-62_1
Moving working folders and log files
Processing of folder results_hybrid_60/SPOON-62_1 has finished
=========================================
Folder results_hybrid_60/SEATA-11_1 was found
FolderName=SEATA-11_1
SUT_ID=SEATA-11
RUN_ID=1
TESTCASES_FOLDER=results_hybrid_60//SEATA-11_1/temp/testcases
Executing metrics computation using contest_run_benchmark_tool.sh hybrid SEATA-11 . 1 60 --only-compute-metrics results_hybrid_60//SEATA-11_1/temp/testcases
---------
SBST-Contest
---------

>>> TOOL NAME:  hybrid

>>> BENCHMARK:  SEATA-11

>>> RUN NUMBER: 1

>>> MODE: --only-compute-metrics


### COMPUTING METRICS ###: io.seata.core.rpc.RpcContext

---Compilation---

---Timing Information---

---The tests are re-executed other four times to find the flaky ones---

=== Run Jacoco for Coverage ===
Method coverage = 0.0
Line coverage = 0.0
Branch coverage = 0.0
Complexity coverage = 0.0

=== Run PIT ===
Could not calculate mutation metrics!
Time for mutation analysis = 4

>>> RESULTS:
	Tool name: hybrid
	Benchmark: SEATA-11
	Class Under Test: io.seata.core.rpc.RpcContext
	Run number: 1
	Tool preparation time (ms): 89764
	Tool test cases generation time (ms): 5073
	Test cases execution time (ms): 16
	Test case number: 0
	Uncompilable Test Classes: 0
	Broken tests number: 0
	Failing tests number: 0
	Lines total: 74
	Lines covered: 0
	Lines coverage ratio (%): 0.0
	Conditions total: 30
	Conditions covered: 0
	Conditions coverage ratio (%): 0.0
	Mutants total: 0
	Mutants covered: 0
	Mutants coverage ratio (%): 0.0
	Mutants killed: 0
	Mutants killed ratio (%): 0.0
	Mutants alive: 0
Copying transcript file transcript.csv to folder results_hybrid_60/SEATA-11_1
Moving working folders and log files
Processing of folder results_hybrid_60/SEATA-11_1 has finished
